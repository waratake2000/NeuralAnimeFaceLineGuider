/usr/local/lib/python3.8/dist-packages/torch/nn/modules/loss.py:530: UserWarning: Using a target size (torch.Size([428, 120])) that is different to the input size (torch.Size([428, 18])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  return F.mse_loss(input, target, reduction=self.reduction)
202306281103_CommonCnn
Training sample instances: 856
Validation sample instances: 17
{'image': tensor([[[0.4078, 0.3765, 0.3373,  ..., 0.4118, 0.3882, 0.3608],
         [0.3804, 0.3686, 0.3569,  ..., 0.3843, 0.3882, 0.3882],
         [0.3373, 0.3608, 0.3882,  ..., 0.3451, 0.3922, 0.4314],
         ...,
         [1.0000, 1.0000, 1.0000,  ..., 0.9843, 0.9882, 0.9922],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9843, 0.9882],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9804, 0.9843]],

        [[0.4078, 0.3765, 0.3373,  ..., 0.4118, 0.3882, 0.3608],
         [0.3804, 0.3686, 0.3569,  ..., 0.3843, 0.3882, 0.3882],
         [0.3373, 0.3608, 0.3882,  ..., 0.3451, 0.3922, 0.4314],
         ...,
         [1.0000, 1.0000, 1.0000,  ..., 0.9843, 0.9882, 0.9922],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9843, 0.9882],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9804, 0.9843]],

        [[0.4078, 0.3765, 0.3373,  ..., 0.4118, 0.3882, 0.3608],
         [0.3804, 0.3686, 0.3569,  ..., 0.3843, 0.3882, 0.3882],
         [0.3373, 0.3608, 0.3882,  ..., 0.3451, 0.3922, 0.4314],
         ...,
         [1.0000, 1.0000, 1.0000,  ..., 0.9843, 0.9882, 0.9922],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9843, 0.9882],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9804, 0.9843]]]), 'keypoints': tensor([[ 44.6179,  82.7056],
        [ 46.5456,  91.4227],
        [ 47.7504, 104.8718],
        [ 52.0876, 116.8267],
        [ 58.5935, 127.2871],
        [ 67.2680, 135.2570],
        [ 77.3883, 141.4834],
        [ 87.7496, 147.2118],
        [100.2794, 150.2005],
        [112.3274, 147.9590],
        [123.6525, 141.7325],
        [133.0499, 133.7626],
        [141.4834, 125.5437],
        [148.4713, 115.0832],
        [153.0495, 103.6265],
        [156.6639,  91.4227],
        [157.1458,  77.9735],
        [129.4355,  77.9735],
        [ 68.4728,  81.9585],
        [121.7248,  76.9773],
        [126.0621,  72.2452],
        [131.6041,  70.5017],
        [138.1100,  70.9999],
        [142.9292,  73.9886],
        [143.4111,  79.2188],
        [138.8329,  83.2037],
        [132.5679,  83.7019],
        [126.3030,  83.4528],
        [120.2790,  81.9585],
        [ 56.9068,  78.9697],
        [ 61.7260,  74.9848],
        [ 67.9909,  73.4905],
        [ 74.7378,  73.7395],
        [ 78.8341,  77.4754],
        [ 78.8341,  83.2037],
        [ 74.4968,  86.6906],
        [ 68.4728,  88.6830],
        [ 62.2079,  88.4340],
        [ 58.1116,  83.9509],
        [106.7853,  77.2263],
        [114.9779,  68.0112],
        [124.6163,  62.5319],
        [135.4595,  59.2941],
        [146.0617,  60.5394],
        [ 48.7142,  68.0112],
        [ 59.0754,  62.7809],
        [ 69.9186,  64.7734],
        [ 79.5570,  71.2489],
        [ 88.2315,  72.7433],
        [106.3034, 103.1284],
        [ 87.2676, 129.7013],
        [ 95.2193, 125.7164],
        [103.4119, 122.4786],
        [111.8455, 123.7239],
        [118.1104, 127.9579],
        [118.1104, 128.7815],
        [111.8455, 124.5475],
        [103.4119, 123.3022],
        [ 95.2193, 126.5399],
        [ 87.2676, 130.5249]])}
train_tensor_dataの数 856
valid_tensor_dataの数 17
ModuleSpec(name='CommonCnn', loader=<_frozen_importlib_external.SourceFileLoader object at 0x7f93cdf20490>, origin='/root/source/train_runner/./models/CommonCnn.py')
Epoch 1 of 20000
Traceback (most recent call last):
  File "train.py", line 572, in <module>
    main()
  File "train.py", line 408, in main
    train_epoch_loss = fit(
  File "train.py", line 195, in fit
    loss = criterion(outputs, keypoints)
  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/loss.py", line 530, in forward
    return F.mse_loss(input, target, reduction=self.reduction)
  File "/usr/local/lib/python3.8/dist-packages/torch/nn/functional.py", line 3279, in mse_loss
    expanded_input, expanded_target = torch.broadcast_tensors(input, target)
  File "/usr/local/lib/python3.8/dist-packages/torch/functional.py", line 73, in broadcast_tensors
    return _VF.broadcast_tensors(tensors)  # type: ignore[attr-defined]
RuntimeError: The size of tensor a (18) must match the size of tensor b (120) at non-singleton dimension 1
/usr/local/lib/python3.8/dist-packages/torch/nn/modules/loss.py:530: UserWarning: Using a target size (torch.Size([285, 120])) that is different to the input size (torch.Size([285, 18])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  return F.mse_loss(input, target, reduction=self.reduction)
202306281103_CommonCnn
Training sample instances: 856
Validation sample instances: 17
{'image': tensor([[[0.4078, 0.3765, 0.3373,  ..., 0.4118, 0.3882, 0.3608],
         [0.3804, 0.3686, 0.3569,  ..., 0.3843, 0.3882, 0.3882],
         [0.3373, 0.3608, 0.3882,  ..., 0.3451, 0.3922, 0.4314],
         ...,
         [1.0000, 1.0000, 1.0000,  ..., 0.9843, 0.9882, 0.9922],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9843, 0.9882],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9804, 0.9843]],

        [[0.4078, 0.3765, 0.3373,  ..., 0.4118, 0.3882, 0.3608],
         [0.3804, 0.3686, 0.3569,  ..., 0.3843, 0.3882, 0.3882],
         [0.3373, 0.3608, 0.3882,  ..., 0.3451, 0.3922, 0.4314],
         ...,
         [1.0000, 1.0000, 1.0000,  ..., 0.9843, 0.9882, 0.9922],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9843, 0.9882],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9804, 0.9843]],

        [[0.4078, 0.3765, 0.3373,  ..., 0.4118, 0.3882, 0.3608],
         [0.3804, 0.3686, 0.3569,  ..., 0.3843, 0.3882, 0.3882],
         [0.3373, 0.3608, 0.3882,  ..., 0.3451, 0.3922, 0.4314],
         ...,
         [1.0000, 1.0000, 1.0000,  ..., 0.9843, 0.9882, 0.9922],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9843, 0.9882],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9804, 0.9843]]]), 'keypoints': tensor([[ 44.6179,  82.7056],
        [ 46.5456,  91.4227],
        [ 47.7504, 104.8718],
        [ 52.0876, 116.8267],
        [ 58.5935, 127.2871],
        [ 67.2680, 135.2570],
        [ 77.3883, 141.4834],
        [ 87.7496, 147.2118],
        [100.2794, 150.2005],
        [112.3274, 147.9590],
        [123.6525, 141.7325],
        [133.0499, 133.7626],
        [141.4834, 125.5437],
        [148.4713, 115.0832],
        [153.0495, 103.6265],
        [156.6639,  91.4227],
        [157.1458,  77.9735],
        [129.4355,  77.9735],
        [ 68.4728,  81.9585],
        [121.7248,  76.9773],
        [126.0621,  72.2452],
        [131.6041,  70.5017],
        [138.1100,  70.9999],
        [142.9292,  73.9886],
        [143.4111,  79.2188],
        [138.8329,  83.2037],
        [132.5679,  83.7019],
        [126.3030,  83.4528],
        [120.2790,  81.9585],
        [ 56.9068,  78.9697],
        [ 61.7260,  74.9848],
        [ 67.9909,  73.4905],
        [ 74.7378,  73.7395],
        [ 78.8341,  77.4754],
        [ 78.8341,  83.2037],
        [ 74.4968,  86.6906],
        [ 68.4728,  88.6830],
        [ 62.2079,  88.4340],
        [ 58.1116,  83.9509],
        [106.7853,  77.2263],
        [114.9779,  68.0112],
        [124.6163,  62.5319],
        [135.4595,  59.2941],
        [146.0617,  60.5394],
        [ 48.7142,  68.0112],
        [ 59.0754,  62.7809],
        [ 69.9186,  64.7734],
        [ 79.5570,  71.2489],
        [ 88.2315,  72.7433],
        [106.3034, 103.1284],
        [ 87.2676, 129.7013],
        [ 95.2193, 125.7164],
        [103.4119, 122.4786],
        [111.8455, 123.7239],
        [118.1104, 127.9579],
        [118.1104, 128.7815],
        [111.8455, 124.5475],
        [103.4119, 123.3022],
        [ 95.2193, 126.5399],
        [ 87.2676, 130.5249]])}
train_tensor_dataの数 856
valid_tensor_dataの数 17
ModuleSpec(name='CommonCnn', loader=<_frozen_importlib_external.SourceFileLoader object at 0x7fbd4c322490>, origin='/root/source/train_runner/./models/CommonCnn.py')
Epoch 1 of 20000
Traceback (most recent call last):
  File "train.py", line 572, in <module>
    main()
  File "train.py", line 408, in main
    train_epoch_loss = fit(
  File "train.py", line 195, in fit
    loss = criterion(outputs, keypoints)
  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/loss.py", line 530, in forward
    return F.mse_loss(input, target, reduction=self.reduction)
  File "/usr/local/lib/python3.8/dist-packages/torch/nn/functional.py", line 3279, in mse_loss
    expanded_input, expanded_target = torch.broadcast_tensors(input, target)
  File "/usr/local/lib/python3.8/dist-packages/torch/functional.py", line 73, in broadcast_tensors
    return _VF.broadcast_tensors(tensors)  # type: ignore[attr-defined]
RuntimeError: The size of tensor a (18) must match the size of tensor b (120) at non-singleton dimension 1
/usr/local/lib/python3.8/dist-packages/torch/nn/modules/loss.py:530: UserWarning: Using a target size (torch.Size([214, 120])) that is different to the input size (torch.Size([214, 18])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  return F.mse_loss(input, target, reduction=self.reduction)
202306281103_CommonCnn
Training sample instances: 856
Validation sample instances: 17
{'image': tensor([[[0.4078, 0.3765, 0.3373,  ..., 0.4118, 0.3882, 0.3608],
         [0.3804, 0.3686, 0.3569,  ..., 0.3843, 0.3882, 0.3882],
         [0.3373, 0.3608, 0.3882,  ..., 0.3451, 0.3922, 0.4314],
         ...,
         [1.0000, 1.0000, 1.0000,  ..., 0.9843, 0.9882, 0.9922],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9843, 0.9882],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9804, 0.9843]],

        [[0.4078, 0.3765, 0.3373,  ..., 0.4118, 0.3882, 0.3608],
         [0.3804, 0.3686, 0.3569,  ..., 0.3843, 0.3882, 0.3882],
         [0.3373, 0.3608, 0.3882,  ..., 0.3451, 0.3922, 0.4314],
         ...,
         [1.0000, 1.0000, 1.0000,  ..., 0.9843, 0.9882, 0.9922],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9843, 0.9882],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9804, 0.9843]],

        [[0.4078, 0.3765, 0.3373,  ..., 0.4118, 0.3882, 0.3608],
         [0.3804, 0.3686, 0.3569,  ..., 0.3843, 0.3882, 0.3882],
         [0.3373, 0.3608, 0.3882,  ..., 0.3451, 0.3922, 0.4314],
         ...,
         [1.0000, 1.0000, 1.0000,  ..., 0.9843, 0.9882, 0.9922],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9843, 0.9882],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9804, 0.9843]]]), 'keypoints': tensor([[ 44.6179,  82.7056],
        [ 46.5456,  91.4227],
        [ 47.7504, 104.8718],
        [ 52.0876, 116.8267],
        [ 58.5935, 127.2871],
        [ 67.2680, 135.2570],
        [ 77.3883, 141.4834],
        [ 87.7496, 147.2118],
        [100.2794, 150.2005],
        [112.3274, 147.9590],
        [123.6525, 141.7325],
        [133.0499, 133.7626],
        [141.4834, 125.5437],
        [148.4713, 115.0832],
        [153.0495, 103.6265],
        [156.6639,  91.4227],
        [157.1458,  77.9735],
        [129.4355,  77.9735],
        [ 68.4728,  81.9585],
        [121.7248,  76.9773],
        [126.0621,  72.2452],
        [131.6041,  70.5017],
        [138.1100,  70.9999],
        [142.9292,  73.9886],
        [143.4111,  79.2188],
        [138.8329,  83.2037],
        [132.5679,  83.7019],
        [126.3030,  83.4528],
        [120.2790,  81.9585],
        [ 56.9068,  78.9697],
        [ 61.7260,  74.9848],
        [ 67.9909,  73.4905],
        [ 74.7378,  73.7395],
        [ 78.8341,  77.4754],
        [ 78.8341,  83.2037],
        [ 74.4968,  86.6906],
        [ 68.4728,  88.6830],
        [ 62.2079,  88.4340],
        [ 58.1116,  83.9509],
        [106.7853,  77.2263],
        [114.9779,  68.0112],
        [124.6163,  62.5319],
        [135.4595,  59.2941],
        [146.0617,  60.5394],
        [ 48.7142,  68.0112],
        [ 59.0754,  62.7809],
        [ 69.9186,  64.7734],
        [ 79.5570,  71.2489],
        [ 88.2315,  72.7433],
        [106.3034, 103.1284],
        [ 87.2676, 129.7013],
        [ 95.2193, 125.7164],
        [103.4119, 122.4786],
        [111.8455, 123.7239],
        [118.1104, 127.9579],
        [118.1104, 128.7815],
        [111.8455, 124.5475],
        [103.4119, 123.3022],
        [ 95.2193, 126.5399],
        [ 87.2676, 130.5249]])}
train_tensor_dataの数 856
valid_tensor_dataの数 17
ModuleSpec(name='CommonCnn', loader=<_frozen_importlib_external.SourceFileLoader object at 0x7f61473ff490>, origin='/root/source/train_runner/./models/CommonCnn.py')
Epoch 1 of 20000
Traceback (most recent call last):
  File "train.py", line 572, in <module>
    main()
  File "train.py", line 408, in main
    train_epoch_loss = fit(
  File "train.py", line 195, in fit
    loss = criterion(outputs, keypoints)
  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/loss.py", line 530, in forward
    return F.mse_loss(input, target, reduction=self.reduction)
  File "/usr/local/lib/python3.8/dist-packages/torch/nn/functional.py", line 3279, in mse_loss
    expanded_input, expanded_target = torch.broadcast_tensors(input, target)
  File "/usr/local/lib/python3.8/dist-packages/torch/functional.py", line 73, in broadcast_tensors
    return _VF.broadcast_tensors(tensors)  # type: ignore[attr-defined]
RuntimeError: The size of tensor a (18) must match the size of tensor b (120) at non-singleton dimension 1
/usr/local/lib/python3.8/dist-packages/torch/nn/modules/loss.py:530: UserWarning: Using a target size (torch.Size([171, 120])) that is different to the input size (torch.Size([171, 18])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  return F.mse_loss(input, target, reduction=self.reduction)
202306281103_CommonCnn
Training sample instances: 856
Validation sample instances: 17
{'image': tensor([[[0.4078, 0.3765, 0.3373,  ..., 0.4118, 0.3882, 0.3608],
         [0.3804, 0.3686, 0.3569,  ..., 0.3843, 0.3882, 0.3882],
         [0.3373, 0.3608, 0.3882,  ..., 0.3451, 0.3922, 0.4314],
         ...,
         [1.0000, 1.0000, 1.0000,  ..., 0.9843, 0.9882, 0.9922],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9843, 0.9882],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9804, 0.9843]],

        [[0.4078, 0.3765, 0.3373,  ..., 0.4118, 0.3882, 0.3608],
         [0.3804, 0.3686, 0.3569,  ..., 0.3843, 0.3882, 0.3882],
         [0.3373, 0.3608, 0.3882,  ..., 0.3451, 0.3922, 0.4314],
         ...,
         [1.0000, 1.0000, 1.0000,  ..., 0.9843, 0.9882, 0.9922],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9843, 0.9882],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9804, 0.9843]],

        [[0.4078, 0.3765, 0.3373,  ..., 0.4118, 0.3882, 0.3608],
         [0.3804, 0.3686, 0.3569,  ..., 0.3843, 0.3882, 0.3882],
         [0.3373, 0.3608, 0.3882,  ..., 0.3451, 0.3922, 0.4314],
         ...,
         [1.0000, 1.0000, 1.0000,  ..., 0.9843, 0.9882, 0.9922],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9843, 0.9882],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9804, 0.9843]]]), 'keypoints': tensor([[ 44.6179,  82.7056],
        [ 46.5456,  91.4227],
        [ 47.7504, 104.8718],
        [ 52.0876, 116.8267],
        [ 58.5935, 127.2871],
        [ 67.2680, 135.2570],
        [ 77.3883, 141.4834],
        [ 87.7496, 147.2118],
        [100.2794, 150.2005],
        [112.3274, 147.9590],
        [123.6525, 141.7325],
        [133.0499, 133.7626],
        [141.4834, 125.5437],
        [148.4713, 115.0832],
        [153.0495, 103.6265],
        [156.6639,  91.4227],
        [157.1458,  77.9735],
        [129.4355,  77.9735],
        [ 68.4728,  81.9585],
        [121.7248,  76.9773],
        [126.0621,  72.2452],
        [131.6041,  70.5017],
        [138.1100,  70.9999],
        [142.9292,  73.9886],
        [143.4111,  79.2188],
        [138.8329,  83.2037],
        [132.5679,  83.7019],
        [126.3030,  83.4528],
        [120.2790,  81.9585],
        [ 56.9068,  78.9697],
        [ 61.7260,  74.9848],
        [ 67.9909,  73.4905],
        [ 74.7378,  73.7395],
        [ 78.8341,  77.4754],
        [ 78.8341,  83.2037],
        [ 74.4968,  86.6906],
        [ 68.4728,  88.6830],
        [ 62.2079,  88.4340],
        [ 58.1116,  83.9509],
        [106.7853,  77.2263],
        [114.9779,  68.0112],
        [124.6163,  62.5319],
        [135.4595,  59.2941],
        [146.0617,  60.5394],
        [ 48.7142,  68.0112],
        [ 59.0754,  62.7809],
        [ 69.9186,  64.7734],
        [ 79.5570,  71.2489],
        [ 88.2315,  72.7433],
        [106.3034, 103.1284],
        [ 87.2676, 129.7013],
        [ 95.2193, 125.7164],
        [103.4119, 122.4786],
        [111.8455, 123.7239],
        [118.1104, 127.9579],
        [118.1104, 128.7815],
        [111.8455, 124.5475],
        [103.4119, 123.3022],
        [ 95.2193, 126.5399],
        [ 87.2676, 130.5249]])}
train_tensor_dataの数 856
valid_tensor_dataの数 17
ModuleSpec(name='CommonCnn', loader=<_frozen_importlib_external.SourceFileLoader object at 0x7f7d39ceb490>, origin='/root/source/train_runner/./models/CommonCnn.py')
Epoch 1 of 20000
Traceback (most recent call last):
  File "train.py", line 572, in <module>
    main()
  File "train.py", line 408, in main
    train_epoch_loss = fit(
  File "train.py", line 195, in fit
    loss = criterion(outputs, keypoints)
  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/loss.py", line 530, in forward
    return F.mse_loss(input, target, reduction=self.reduction)
  File "/usr/local/lib/python3.8/dist-packages/torch/nn/functional.py", line 3279, in mse_loss
    expanded_input, expanded_target = torch.broadcast_tensors(input, target)
  File "/usr/local/lib/python3.8/dist-packages/torch/functional.py", line 73, in broadcast_tensors
    return _VF.broadcast_tensors(tensors)  # type: ignore[attr-defined]
RuntimeError: The size of tensor a (18) must match the size of tensor b (120) at non-singleton dimension 1
/usr/local/lib/python3.8/dist-packages/torch/nn/modules/loss.py:530: UserWarning: Using a target size (torch.Size([142, 120])) that is different to the input size (torch.Size([142, 18])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  return F.mse_loss(input, target, reduction=self.reduction)
202306281103_CommonCnn
Training sample instances: 856
Validation sample instances: 17
{'image': tensor([[[0.4078, 0.3765, 0.3373,  ..., 0.4118, 0.3882, 0.3608],
         [0.3804, 0.3686, 0.3569,  ..., 0.3843, 0.3882, 0.3882],
         [0.3373, 0.3608, 0.3882,  ..., 0.3451, 0.3922, 0.4314],
         ...,
         [1.0000, 1.0000, 1.0000,  ..., 0.9843, 0.9882, 0.9922],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9843, 0.9882],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9804, 0.9843]],

        [[0.4078, 0.3765, 0.3373,  ..., 0.4118, 0.3882, 0.3608],
         [0.3804, 0.3686, 0.3569,  ..., 0.3843, 0.3882, 0.3882],
         [0.3373, 0.3608, 0.3882,  ..., 0.3451, 0.3922, 0.4314],
         ...,
         [1.0000, 1.0000, 1.0000,  ..., 0.9843, 0.9882, 0.9922],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9843, 0.9882],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9804, 0.9843]],

        [[0.4078, 0.3765, 0.3373,  ..., 0.4118, 0.3882, 0.3608],
         [0.3804, 0.3686, 0.3569,  ..., 0.3843, 0.3882, 0.3882],
         [0.3373, 0.3608, 0.3882,  ..., 0.3451, 0.3922, 0.4314],
         ...,
         [1.0000, 1.0000, 1.0000,  ..., 0.9843, 0.9882, 0.9922],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9843, 0.9882],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9804, 0.9843]]]), 'keypoints': tensor([[ 44.6179,  82.7056],
        [ 46.5456,  91.4227],
        [ 47.7504, 104.8718],
        [ 52.0876, 116.8267],
        [ 58.5935, 127.2871],
        [ 67.2680, 135.2570],
        [ 77.3883, 141.4834],
        [ 87.7496, 147.2118],
        [100.2794, 150.2005],
        [112.3274, 147.9590],
        [123.6525, 141.7325],
        [133.0499, 133.7626],
        [141.4834, 125.5437],
        [148.4713, 115.0832],
        [153.0495, 103.6265],
        [156.6639,  91.4227],
        [157.1458,  77.9735],
        [129.4355,  77.9735],
        [ 68.4728,  81.9585],
        [121.7248,  76.9773],
        [126.0621,  72.2452],
        [131.6041,  70.5017],
        [138.1100,  70.9999],
        [142.9292,  73.9886],
        [143.4111,  79.2188],
        [138.8329,  83.2037],
        [132.5679,  83.7019],
        [126.3030,  83.4528],
        [120.2790,  81.9585],
        [ 56.9068,  78.9697],
        [ 61.7260,  74.9848],
        [ 67.9909,  73.4905],
        [ 74.7378,  73.7395],
        [ 78.8341,  77.4754],
        [ 78.8341,  83.2037],
        [ 74.4968,  86.6906],
        [ 68.4728,  88.6830],
        [ 62.2079,  88.4340],
        [ 58.1116,  83.9509],
        [106.7853,  77.2263],
        [114.9779,  68.0112],
        [124.6163,  62.5319],
        [135.4595,  59.2941],
        [146.0617,  60.5394],
        [ 48.7142,  68.0112],
        [ 59.0754,  62.7809],
        [ 69.9186,  64.7734],
        [ 79.5570,  71.2489],
        [ 88.2315,  72.7433],
        [106.3034, 103.1284],
        [ 87.2676, 129.7013],
        [ 95.2193, 125.7164],
        [103.4119, 122.4786],
        [111.8455, 123.7239],
        [118.1104, 127.9579],
        [118.1104, 128.7815],
        [111.8455, 124.5475],
        [103.4119, 123.3022],
        [ 95.2193, 126.5399],
        [ 87.2676, 130.5249]])}
train_tensor_dataの数 856
valid_tensor_dataの数 17
ModuleSpec(name='CommonCnn', loader=<_frozen_importlib_external.SourceFileLoader object at 0x7fec0d3bc490>, origin='/root/source/train_runner/./models/CommonCnn.py')
Epoch 1 of 20000
Traceback (most recent call last):
  File "train.py", line 572, in <module>
    main()
  File "train.py", line 408, in main
    train_epoch_loss = fit(
  File "train.py", line 195, in fit
    loss = criterion(outputs, keypoints)
  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/loss.py", line 530, in forward
    return F.mse_loss(input, target, reduction=self.reduction)
  File "/usr/local/lib/python3.8/dist-packages/torch/nn/functional.py", line 3279, in mse_loss
    expanded_input, expanded_target = torch.broadcast_tensors(input, target)
  File "/usr/local/lib/python3.8/dist-packages/torch/functional.py", line 73, in broadcast_tensors
    return _VF.broadcast_tensors(tensors)  # type: ignore[attr-defined]
RuntimeError: The size of tensor a (18) must match the size of tensor b (120) at non-singleton dimension 1
/usr/local/lib/python3.8/dist-packages/torch/nn/modules/loss.py:530: UserWarning: Using a target size (torch.Size([122, 120])) that is different to the input size (torch.Size([122, 18])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  return F.mse_loss(input, target, reduction=self.reduction)
202306281103_CommonCnn
Training sample instances: 856
Validation sample instances: 17
{'image': tensor([[[0.4078, 0.3765, 0.3373,  ..., 0.4118, 0.3882, 0.3608],
         [0.3804, 0.3686, 0.3569,  ..., 0.3843, 0.3882, 0.3882],
         [0.3373, 0.3608, 0.3882,  ..., 0.3451, 0.3922, 0.4314],
         ...,
         [1.0000, 1.0000, 1.0000,  ..., 0.9843, 0.9882, 0.9922],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9843, 0.9882],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9804, 0.9843]],

        [[0.4078, 0.3765, 0.3373,  ..., 0.4118, 0.3882, 0.3608],
         [0.3804, 0.3686, 0.3569,  ..., 0.3843, 0.3882, 0.3882],
         [0.3373, 0.3608, 0.3882,  ..., 0.3451, 0.3922, 0.4314],
         ...,
         [1.0000, 1.0000, 1.0000,  ..., 0.9843, 0.9882, 0.9922],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9843, 0.9882],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9804, 0.9843]],

        [[0.4078, 0.3765, 0.3373,  ..., 0.4118, 0.3882, 0.3608],
         [0.3804, 0.3686, 0.3569,  ..., 0.3843, 0.3882, 0.3882],
         [0.3373, 0.3608, 0.3882,  ..., 0.3451, 0.3922, 0.4314],
         ...,
         [1.0000, 1.0000, 1.0000,  ..., 0.9843, 0.9882, 0.9922],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9843, 0.9882],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9804, 0.9843]]]), 'keypoints': tensor([[ 44.6179,  82.7056],
        [ 46.5456,  91.4227],
        [ 47.7504, 104.8718],
        [ 52.0876, 116.8267],
        [ 58.5935, 127.2871],
        [ 67.2680, 135.2570],
        [ 77.3883, 141.4834],
        [ 87.7496, 147.2118],
        [100.2794, 150.2005],
        [112.3274, 147.9590],
        [123.6525, 141.7325],
        [133.0499, 133.7626],
        [141.4834, 125.5437],
        [148.4713, 115.0832],
        [153.0495, 103.6265],
        [156.6639,  91.4227],
        [157.1458,  77.9735],
        [129.4355,  77.9735],
        [ 68.4728,  81.9585],
        [121.7248,  76.9773],
        [126.0621,  72.2452],
        [131.6041,  70.5017],
        [138.1100,  70.9999],
        [142.9292,  73.9886],
        [143.4111,  79.2188],
        [138.8329,  83.2037],
        [132.5679,  83.7019],
        [126.3030,  83.4528],
        [120.2790,  81.9585],
        [ 56.9068,  78.9697],
        [ 61.7260,  74.9848],
        [ 67.9909,  73.4905],
        [ 74.7378,  73.7395],
        [ 78.8341,  77.4754],
        [ 78.8341,  83.2037],
        [ 74.4968,  86.6906],
        [ 68.4728,  88.6830],
        [ 62.2079,  88.4340],
        [ 58.1116,  83.9509],
        [106.7853,  77.2263],
        [114.9779,  68.0112],
        [124.6163,  62.5319],
        [135.4595,  59.2941],
        [146.0617,  60.5394],
        [ 48.7142,  68.0112],
        [ 59.0754,  62.7809],
        [ 69.9186,  64.7734],
        [ 79.5570,  71.2489],
        [ 88.2315,  72.7433],
        [106.3034, 103.1284],
        [ 87.2676, 129.7013],
        [ 95.2193, 125.7164],
        [103.4119, 122.4786],
        [111.8455, 123.7239],
        [118.1104, 127.9579],
        [118.1104, 128.7815],
        [111.8455, 124.5475],
        [103.4119, 123.3022],
        [ 95.2193, 126.5399],
        [ 87.2676, 130.5249]])}
train_tensor_dataの数 856
valid_tensor_dataの数 17
ModuleSpec(name='CommonCnn', loader=<_frozen_importlib_external.SourceFileLoader object at 0x7f9c6c0cb490>, origin='/root/source/train_runner/./models/CommonCnn.py')
Epoch 1 of 20000
Traceback (most recent call last):
  File "train.py", line 572, in <module>
    main()
  File "train.py", line 408, in main
    train_epoch_loss = fit(
  File "train.py", line 195, in fit
    loss = criterion(outputs, keypoints)
  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/loss.py", line 530, in forward
    return F.mse_loss(input, target, reduction=self.reduction)
  File "/usr/local/lib/python3.8/dist-packages/torch/nn/functional.py", line 3279, in mse_loss
    expanded_input, expanded_target = torch.broadcast_tensors(input, target)
  File "/usr/local/lib/python3.8/dist-packages/torch/functional.py", line 73, in broadcast_tensors
    return _VF.broadcast_tensors(tensors)  # type: ignore[attr-defined]
RuntimeError: The size of tensor a (18) must match the size of tensor b (120) at non-singleton dimension 1
/usr/local/lib/python3.8/dist-packages/torch/nn/modules/loss.py:530: UserWarning: Using a target size (torch.Size([107, 120])) that is different to the input size (torch.Size([107, 18])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  return F.mse_loss(input, target, reduction=self.reduction)
202306281103_CommonCnn
Training sample instances: 856
Validation sample instances: 17
{'image': tensor([[[0.4078, 0.3765, 0.3373,  ..., 0.4118, 0.3882, 0.3608],
         [0.3804, 0.3686, 0.3569,  ..., 0.3843, 0.3882, 0.3882],
         [0.3373, 0.3608, 0.3882,  ..., 0.3451, 0.3922, 0.4314],
         ...,
         [1.0000, 1.0000, 1.0000,  ..., 0.9843, 0.9882, 0.9922],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9843, 0.9882],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9804, 0.9843]],

        [[0.4078, 0.3765, 0.3373,  ..., 0.4118, 0.3882, 0.3608],
         [0.3804, 0.3686, 0.3569,  ..., 0.3843, 0.3882, 0.3882],
         [0.3373, 0.3608, 0.3882,  ..., 0.3451, 0.3922, 0.4314],
         ...,
         [1.0000, 1.0000, 1.0000,  ..., 0.9843, 0.9882, 0.9922],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9843, 0.9882],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9804, 0.9843]],

        [[0.4078, 0.3765, 0.3373,  ..., 0.4118, 0.3882, 0.3608],
         [0.3804, 0.3686, 0.3569,  ..., 0.3843, 0.3882, 0.3882],
         [0.3373, 0.3608, 0.3882,  ..., 0.3451, 0.3922, 0.4314],
         ...,
         [1.0000, 1.0000, 1.0000,  ..., 0.9843, 0.9882, 0.9922],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9843, 0.9882],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9804, 0.9843]]]), 'keypoints': tensor([[ 44.6179,  82.7056],
        [ 46.5456,  91.4227],
        [ 47.7504, 104.8718],
        [ 52.0876, 116.8267],
        [ 58.5935, 127.2871],
        [ 67.2680, 135.2570],
        [ 77.3883, 141.4834],
        [ 87.7496, 147.2118],
        [100.2794, 150.2005],
        [112.3274, 147.9590],
        [123.6525, 141.7325],
        [133.0499, 133.7626],
        [141.4834, 125.5437],
        [148.4713, 115.0832],
        [153.0495, 103.6265],
        [156.6639,  91.4227],
        [157.1458,  77.9735],
        [129.4355,  77.9735],
        [ 68.4728,  81.9585],
        [121.7248,  76.9773],
        [126.0621,  72.2452],
        [131.6041,  70.5017],
        [138.1100,  70.9999],
        [142.9292,  73.9886],
        [143.4111,  79.2188],
        [138.8329,  83.2037],
        [132.5679,  83.7019],
        [126.3030,  83.4528],
        [120.2790,  81.9585],
        [ 56.9068,  78.9697],
        [ 61.7260,  74.9848],
        [ 67.9909,  73.4905],
        [ 74.7378,  73.7395],
        [ 78.8341,  77.4754],
        [ 78.8341,  83.2037],
        [ 74.4968,  86.6906],
        [ 68.4728,  88.6830],
        [ 62.2079,  88.4340],
        [ 58.1116,  83.9509],
        [106.7853,  77.2263],
        [114.9779,  68.0112],
        [124.6163,  62.5319],
        [135.4595,  59.2941],
        [146.0617,  60.5394],
        [ 48.7142,  68.0112],
        [ 59.0754,  62.7809],
        [ 69.9186,  64.7734],
        [ 79.5570,  71.2489],
        [ 88.2315,  72.7433],
        [106.3034, 103.1284],
        [ 87.2676, 129.7013],
        [ 95.2193, 125.7164],
        [103.4119, 122.4786],
        [111.8455, 123.7239],
        [118.1104, 127.9579],
        [118.1104, 128.7815],
        [111.8455, 124.5475],
        [103.4119, 123.3022],
        [ 95.2193, 126.5399],
        [ 87.2676, 130.5249]])}
train_tensor_dataの数 856
valid_tensor_dataの数 17
ModuleSpec(name='CommonCnn', loader=<_frozen_importlib_external.SourceFileLoader object at 0x7f1b9f588490>, origin='/root/source/train_runner/./models/CommonCnn.py')
Epoch 1 of 20000
Traceback (most recent call last):
  File "train.py", line 572, in <module>
    main()
  File "train.py", line 408, in main
    train_epoch_loss = fit(
  File "train.py", line 195, in fit
    loss = criterion(outputs, keypoints)
  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/torch/nn/modules/loss.py", line 530, in forward
    return F.mse_loss(input, target, reduction=self.reduction)
  File "/usr/local/lib/python3.8/dist-packages/torch/nn/functional.py", line 3279, in mse_loss
    expanded_input, expanded_target = torch.broadcast_tensors(input, target)
  File "/usr/local/lib/python3.8/dist-packages/torch/functional.py", line 73, in broadcast_tensors
    return _VF.broadcast_tensors(tensors)  # type: ignore[attr-defined]
RuntimeError: The size of tensor a (18) must match the size of tensor b (120) at non-singleton dimension 1
202306281104_CommonCnn
Training sample instances: 856
Validation sample instances: 17
{'image': tensor([[[0.4078, 0.3765, 0.3373,  ..., 0.4118, 0.3882, 0.3608],
         [0.3804, 0.3686, 0.3569,  ..., 0.3843, 0.3882, 0.3882],
         [0.3373, 0.3608, 0.3882,  ..., 0.3451, 0.3922, 0.4314],
         ...,
         [1.0000, 1.0000, 1.0000,  ..., 0.9843, 0.9882, 0.9922],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9843, 0.9882],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9804, 0.9843]],

        [[0.4078, 0.3765, 0.3373,  ..., 0.4118, 0.3882, 0.3608],
         [0.3804, 0.3686, 0.3569,  ..., 0.3843, 0.3882, 0.3882],
         [0.3373, 0.3608, 0.3882,  ..., 0.3451, 0.3922, 0.4314],
         ...,
         [1.0000, 1.0000, 1.0000,  ..., 0.9843, 0.9882, 0.9922],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9843, 0.9882],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9804, 0.9843]],

        [[0.4078, 0.3765, 0.3373,  ..., 0.4118, 0.3882, 0.3608],
         [0.3804, 0.3686, 0.3569,  ..., 0.3843, 0.3882, 0.3882],
         [0.3373, 0.3608, 0.3882,  ..., 0.3451, 0.3922, 0.4314],
         ...,
         [1.0000, 1.0000, 1.0000,  ..., 0.9843, 0.9882, 0.9922],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9843, 0.9882],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9804, 0.9843]]]), 'keypoints': tensor([[ 44.6179,  82.7056],
        [ 46.5456,  91.4227],
        [ 47.7504, 104.8718],
        [ 52.0876, 116.8267],
        [ 58.5935, 127.2871],
        [ 67.2680, 135.2570],
        [ 77.3883, 141.4834],
        [ 87.7496, 147.2118],
        [100.2794, 150.2005],
        [112.3274, 147.9590],
        [123.6525, 141.7325],
        [133.0499, 133.7626],
        [141.4834, 125.5437],
        [148.4713, 115.0832],
        [153.0495, 103.6265],
        [156.6639,  91.4227],
        [157.1458,  77.9735],
        [129.4355,  77.9735],
        [ 68.4728,  81.9585],
        [121.7248,  76.9773],
        [126.0621,  72.2452],
        [131.6041,  70.5017],
        [138.1100,  70.9999],
        [142.9292,  73.9886],
        [143.4111,  79.2188],
        [138.8329,  83.2037],
        [132.5679,  83.7019],
        [126.3030,  83.4528],
        [120.2790,  81.9585],
        [ 56.9068,  78.9697],
        [ 61.7260,  74.9848],
        [ 67.9909,  73.4905],
        [ 74.7378,  73.7395],
        [ 78.8341,  77.4754],
        [ 78.8341,  83.2037],
        [ 74.4968,  86.6906],
        [ 68.4728,  88.6830],
        [ 62.2079,  88.4340],
        [ 58.1116,  83.9509],
        [106.7853,  77.2263],
        [114.9779,  68.0112],
        [124.6163,  62.5319],
        [135.4595,  59.2941],
        [146.0617,  60.5394],
        [ 48.7142,  68.0112],
        [ 59.0754,  62.7809],
        [ 69.9186,  64.7734],
        [ 79.5570,  71.2489],
        [ 88.2315,  72.7433],
        [106.3034, 103.1284],
        [ 87.2676, 129.7013],
        [ 95.2193, 125.7164],
        [103.4119, 122.4786],
        [111.8455, 123.7239],
        [118.1104, 127.9579],
        [118.1104, 128.7815],
        [111.8455, 124.5475],
        [103.4119, 123.3022],
        [ 95.2193, 126.5399],
        [ 87.2676, 130.5249]])}
train_tensor_dataの数 856
valid_tensor_dataの数 17
ModuleSpec(name='CommonCnn', loader=<_frozen_importlib_external.SourceFileLoader object at 0x7f733c73d490>, origin='/root/source/train_runner/./models/CommonCnn.py')
Epoch 1 of 20000
Train Loss: 10598.4428
Val Loss: 10747.8643
Epoch 2 of 20000
Epoch 3 of 20000
Epoch 4 of 20000
Epoch 5 of 20000
Epoch 6 of 20000
Epoch 7 of 20000
Epoch 8 of 20000
Epoch 9 of 20000
Epoch 10 of 20000
Epoch 11 of 20000
Epoch 12 of 20000
Epoch 13 of 20000
Epoch 14 of 20000
Epoch 15 of 20000
Epoch 16 of 20000
Epoch 17 of 20000
Epoch 18 of 20000
Epoch 19 of 20000
Epoch 20 of 20000
Epoch 21 of 20000
Epoch 22 of 20000
Epoch 23 of 20000
Epoch 24 of 20000
Epoch 25 of 20000
Epoch 26 of 20000
Epoch 27 of 20000
Epoch 28 of 20000
Epoch 29 of 20000
Epoch 30 of 20000
Epoch 31 of 20000
Epoch 32 of 20000
Epoch 33 of 20000
Epoch 34 of 20000
Epoch 35 of 20000
Epoch 36 of 20000
Epoch 37 of 20000
Epoch 38 of 20000
Epoch 39 of 20000
Epoch 40 of 20000
Epoch 41 of 20000
Epoch 42 of 20000
Epoch 43 of 20000
Epoch 44 of 20000
Epoch 45 of 20000
Epoch 46 of 20000
Epoch 47 of 20000
Epoch 48 of 20000
Epoch 49 of 20000
Epoch 50 of 20000
Train Loss: 274.8253
Val Loss: 342.0645
tensor([[ 38.7189,  77.3452,  40.8862,  92.0849,  43.5040, 106.4039,  47.6981,
         119.8261,  54.6453, 132.1597,  63.5778, 142.1902,  74.6262, 151.2544,
          86.3614, 158.8981,  99.8654, 162.7094, 113.6285, 159.7672, 124.8366,
         152.3749, 136.3129, 143.3096, 145.1477, 132.1174, 151.7545, 119.4938,
         156.2275, 105.5132, 158.5172,  90.7395, 159.4036,  76.3324, 128.6038,
          76.1101,  69.2904,  78.1213, 114.8303,  71.2733, 120.3383,  65.0357,
         129.3073,  63.5243, 138.4546,  65.0595, 145.1329,  70.2237, 144.6389,
          78.2317, 138.3564,  85.1172, 130.0956,  87.0463, 120.9403,  85.4578,
         115.2323,  79.3615,  51.6456,  72.5366,  57.7118,  67.1254,  66.6223,
          65.3672,  75.3478,  67.3062,  81.6120,  73.5378,  81.3933,  80.9859,
          76.2032,  87.4114,  67.4463,  88.8867,  58.7778,  86.4167,  52.6462,
          80.4317, 110.2484,  56.1971, 119.7560,  52.4533, 130.6180,  50.5606,
         141.0599,  49.9420, 150.2969,  51.8418,  44.5452,  54.1252,  53.3011,
          52.0917,  63.9085,  52.7497,  73.6301,  55.1981,  82.7325,  57.7242,
          96.5473, 104.8922,  84.3647, 128.1845,  90.4655, 125.6729, 100.0049,
         125.2410, 108.2827, 125.1836, 115.0414, 127.6034, 114.8534, 132.7545,
         108.7586, 135.2341, 100.2657, 136.3762,  91.6262, 135.6145,  84.7456,
         133.2547]], device='cuda:0')
tensor([[ 39.9064,  79.7018,  42.0927,  94.8807,  44.8348, 109.6211,  49.1342,
         123.4546,  56.3136, 136.1754,  65.5246, 146.4894,  76.8898, 155.8430,
          88.9971, 163.7102, 102.9179, 167.6837, 117.0773, 164.6266, 128.6117,
         156.9812, 140.4573, 147.6848, 149.5570, 136.1284, 156.3605, 123.0998,
         160.9557, 108.7112, 163.3153,  93.4800, 164.2922,  78.6486, 132.4742,
          78.4414,  71.4164,  80.5117, 118.3306,  73.4388, 123.9802,  67.0195,
         133.2168,  65.4561, 142.7026,  67.0506, 149.5217,  72.3900, 149.0193,
          80.5942, 142.5525,  87.7309, 134.0383,  89.6770, 124.5829,  88.0614,
         118.7458,  81.7742,  53.1963,  74.7297,  59.4633,  69.1722,  68.6279,
          67.3362,  77.6367,  69.3360,  84.0924,  75.7860,  83.8905,  83.4269,
          78.4729,  90.0517,  69.4804,  91.5937,  60.5573,  89.0683,  54.2188,
          82.8676, 113.5781,  57.9136, 123.3674,  54.0314, 134.5912,  52.0982,
         145.3551,  51.4355, 154.8660,  53.3935,  45.8866,  55.7636,  54.9310,
          53.6846,  65.8354,  54.3673,  75.8725,  56.8631,  85.2487,  59.4483,
          99.4842, 108.0439,  86.9603, 132.0840,  93.2215, 129.4945, 103.0616,
         129.0344, 111.5553, 128.9717, 118.5362, 131.4839, 118.3304, 136.7993,
         112.0726, 139.3361, 103.3234, 140.5047,  94.4543, 139.7266,  87.3264,
         137.2987]], device='cuda:0')
tensor([[ 38.9741,  77.8062,  41.0679,  92.6166,  43.7671, 107.0072,  47.9786,
         120.5214,  54.9793, 132.9537,  63.9666, 143.0133,  75.0779, 152.1550,
          86.9044, 159.8449, 100.4590, 163.7342, 114.3028, 160.7414, 125.5867,
         153.2550, 137.1332, 144.1964, 146.0081, 132.8943, 152.6473, 120.1862,
         157.1321, 106.1287, 159.4124,  91.2884, 160.3968,  76.8064, 129.3256,
          76.5824,  69.7419,  78.6294, 115.5257,  71.6997, 121.0244,  65.4353,
         130.0589,  63.9022, 139.3226,  65.4705, 145.9756,  70.6653, 145.4874,
          78.6877, 139.1978,  85.6585, 130.8872,  87.5552, 121.6172,  85.9912,
         115.9429,  79.8561,  51.9247,  72.9618,  58.0496,  67.5407,  66.9854,
          65.7459,  75.8197,  67.6563,  82.0957,  73.9622,  81.9268,  81.4331,
          76.5849,  87.9281,  67.8155,  89.4370,  59.1306,  86.9728,  52.9307,
          80.8808, 110.8848,  56.5250, 120.4446,  52.7646, 131.4151,  50.8834,
         141.9357,  50.2310, 151.1969,  52.1414,  44.7855,  54.4675,  53.6189,
          52.4024,  64.2610,  53.0957,  74.0745,  55.5052,  83.2549,  58.0266,
          97.1409, 105.4743,  84.9154, 128.9498,  91.0233, 126.4377, 100.6139,
         125.9486, 108.8989, 125.9053, 115.7098, 128.3794, 115.5439, 133.5363,
         109.4047, 136.0504, 100.8805, 137.1928,  92.2100, 136.4183,  85.2795,
         134.0431]], device='cuda:0')
tensor([[ 33.5713,  67.0242,  35.3666,  79.8379,  37.7089,  92.1619,  41.3399,
         103.8356,  47.4195, 114.5441,  55.1125, 123.1956,  64.6433, 131.0621,
          74.8678, 137.6717,  86.5408, 141.0694,  98.4907, 138.4686, 108.1673,
         131.9405, 118.1725, 124.2423, 125.8098, 114.4554, 131.5231, 103.4711,
         135.3471,  91.4105, 137.3108,  78.5953, 138.2051,  66.1781, 111.3065,
          65.9758,  60.0723,  67.7353,  99.5668,  61.8071, 104.2401,  56.3543,
         112.0113,  55.0249, 120.0694,  56.5025, 125.6962,  60.9394, 125.3334,
          67.7487, 119.9295,  73.8521, 112.7488,  75.3587, 104.7293,  74.0761,
          99.8617,  68.7953,  44.6992,  62.8332,  50.0213,  58.1670,  57.6935,
          56.6223,  65.3710,  58.2456,  70.7038,  63.7145,  70.6044,  70.1363,
          65.8953,  75.7312,  58.3814,  77.0210,  50.9210,  74.9595,  45.5484,
          69.6725,  95.5057,  48.7149, 103.7482,  45.4664, 113.2399,  43.8330,
         122.2304,  43.2134, 130.2397,  44.8848,  38.5468,  46.9206,  46.2244,
          45.1625,  55.4023,  45.7261,  63.8673,  47.7762,  71.6851,  49.9392,
          83.7017,  90.7971,  73.2042, 111.1129,  78.4478, 108.9534,  86.6877,
         108.4493,  93.7999, 108.4277,  99.6765, 110.6343,  99.5337, 115.0841,
          94.2899, 117.2136,  86.9283, 118.2045,  79.4988, 117.5079,  73.4729,
         115.4580]], device='cuda:0')
tensor([[ 38.9819,  77.8231,  41.0828,  92.6046,  43.7674, 107.0375,  47.9950,
         120.5272,  54.9503, 132.9716,  63.9480, 143.0552,  75.1021, 152.1889,
          86.9107, 159.8803, 100.4673, 163.7414, 114.3098, 160.7730, 125.6323,
         153.3269, 137.1298, 144.2112, 146.0132, 132.9185, 152.6699, 120.2601,
         157.2047, 106.1635, 159.4414,  91.3497, 160.3790,  76.8044, 129.3911,
          76.5789,  69.7543,  78.6449, 115.5350,  71.6875, 121.0532,  65.4319,
         130.1050,  63.9114, 139.3003,  65.4239, 146.0414,  70.6121, 145.5145,
          78.7147, 139.2111,  85.6256, 130.9113,  87.6006, 121.6644,  86.0094,
         115.9725,  79.8490,  51.9369,  72.9950,  58.0438,  67.5578,  67.0040,
          65.7661,  75.8012,  67.6880,  82.1195,  73.9724,  81.9194,  81.4517,
          76.6643,  87.9627,  67.8456,  89.4608,  59.1476,  86.9541,  52.9831,
          80.8947, 110.9170,  56.5150, 120.4815,  52.7648, 131.4296,  50.8832,
         141.9786,  50.2765, 151.2241,  52.1789,  44.8098,  54.4981,  53.5927,
          52.3944,  64.2501,  53.1114,  74.0406,  55.5350,  83.2881,  58.0697,
          97.1452, 105.5541,  84.8842, 128.9546,  91.0030, 126.4359, 100.6193,
         126.0079, 108.9461, 125.9576, 115.7399, 128.3755, 115.5695, 133.5104,
         109.3993, 136.0584, 100.8650, 137.2095,  92.1535, 136.4527,  85.2847,
         134.0765]], device='cuda:0')
tensor([[ 43.3160,  86.4914,  45.6466, 102.9428,  48.6541, 118.9396,  53.3149,
         133.9526,  61.1111, 147.7524,  71.1043, 158.9413,  83.4324, 169.1172,
          96.5850, 177.6248, 111.6684, 181.9668, 127.0355, 178.6354, 139.5660,
         170.3314, 152.4013, 160.2472, 162.2651, 147.7213, 169.6487, 133.5692,
         174.6422, 117.9537, 177.1930, 101.4437, 178.2892,  85.3301, 143.7348,
          85.1220,  77.5106,  87.3707, 128.4082,  79.6775, 134.5168,  72.7098,
         144.5386,  71.0331, 154.8593,  72.7727, 162.2292,  78.5412, 161.6891,
          87.4371, 154.6688,  95.1989, 145.4602,  97.3134, 135.1561,  95.5712,
         128.8622,  88.7398,  57.7125,  81.0996,  64.5037,  75.0846,  74.4620,
          73.0704,  84.2601,  75.2223,  91.2406,  82.2182,  91.0216,  90.5168,
          85.1215,  97.7099,  75.3826,  99.3883,  65.7076,  96.6497,  58.8343,
          89.8963, 123.2187,  62.8444, 133.8518,  58.6328, 146.0520,  56.5425,
         157.7368,  55.8036, 168.0266,  57.9408,  49.7803,  60.5245,  59.6172,
          58.2437,  71.4359,  59.0146,  82.3230,  61.6772,  92.5122,  64.4782,
         107.9524, 117.2237,  94.3552, 143.3274, 101.1675, 140.5258, 111.8280,
         139.9885, 121.0293, 139.9379, 128.6370, 142.6536, 128.4174, 148.4353,
         121.6219, 151.1958, 112.1258, 152.4624, 102.5124, 151.6177,  94.7656,
         148.9773]], device='cuda:0')
tensor([[ 42.7956,  85.4591,  45.1096, 101.7035,  48.0719, 117.5218,  52.6838,
         132.3530,  60.3741, 145.9916,  70.2553, 157.0545,  82.4470, 167.1039,
          95.4287, 175.5118, 110.3322, 179.7849, 125.5174, 176.5008, 137.9058,
         168.3133, 150.5809, 158.3235, 160.3233, 145.9620, 167.6212, 131.9931,
         172.5618, 116.5505, 175.0814, 100.2439, 176.1415,  84.3155, 142.0412,
          84.1012,  76.5873,  86.3304, 126.8634,  78.7229, 132.9162,  71.8424,
         142.8194,  70.1891, 152.9965,  71.8930, 160.3044,  77.5935, 159.7635,
          86.4020, 152.8223,  94.0510, 143.7201,  96.1649, 133.5550,  94.4299,
         127.3255,  87.6814,  57.0302,  80.1320,  63.7310,  74.1896,  73.5786,
          72.2024,  83.2523,  74.3294,  90.1550,  81.2310,  89.9270,  89.4406,
          84.1263,  96.5447,  74.4943,  98.2076,  64.9267,  95.4872,  58.1419,
          88.8275, 121.7590,  62.0892, 132.2685,  57.9390, 144.3019,  55.8689,
         155.8562,  55.1504, 166.0252,  57.2571,  49.1941,  59.8060,  58.9008,
          57.5434,  70.5813,  58.3082,  81.3344,  60.9494,  91.4128,  63.7225,
         106.6610, 115.8421,  93.2150, 141.6107,  99.9534, 138.8477, 110.4904,
         138.3247, 119.5880, 138.2736, 127.0996, 140.9493, 126.8878, 146.6521,
         120.1632, 149.3901, 110.7823, 150.6461, 101.2733, 149.8103,  93.6353,
         147.1988]], device='cuda:0')
tensor([[ 39.7698,  79.4151,  41.9068,  94.5347,  44.6790, 109.2009,  48.9564,
         122.9973,  56.1216, 135.6850,  65.2957, 145.9362,  76.6086, 155.2789,
          88.6913, 163.1100, 102.5377, 167.0872, 116.6503, 164.0247, 128.1340,
         156.3726, 139.9621, 147.1544, 149.0040, 135.6258, 155.7808, 122.6182,
         160.3318, 108.2958, 162.6982,  93.1314, 163.7109,  78.3710, 131.9576,
          78.1669,  71.1823,  80.2325, 117.8958,  73.1724, 123.5140,  66.7738,
         132.7015,  65.2078, 142.2076,  66.8386, 148.9502,  72.1532, 148.4652,
          80.2898, 142.0332,  87.4361, 133.5636,  89.3357, 124.0958,  87.7575,
         118.3246,  81.4921,  52.9798,  74.4554,  59.2419,  68.9273,  68.3604,
          67.0840,  77.3775,  69.0524,  83.7793,  75.4918,  83.5991,  83.1074,
          78.1355,  89.7101,  69.1991,  91.2555,  60.3469,  88.7652,  53.9968,
          82.5486, 113.1418,  57.6989, 122.9019,  53.8358, 134.1091,  51.9225,
         144.8361,  51.2171, 154.3005,  53.1991,  45.7008,  55.5734,  54.7378,
          53.4869,  65.5983,  54.1835,  75.6099,  56.6327,  84.9412,  59.1988,
          99.1328, 107.6166,  86.6652, 131.6004,  92.9025, 129.0384, 102.6881,
         128.5334, 111.1188, 128.4772, 118.0925, 131.0088, 117.9094, 136.3076,
         111.6789, 138.8345, 102.9629, 139.9957,  94.1498, 139.2199,  87.0173,
         136.7884]], device='cuda:0')
tensor([[ 36.3816,  72.6404,  38.3142,  86.4674,  40.8589,  99.8695,  44.7878,
         112.4922,  51.3372, 124.1121,  59.7142, 133.4904,  70.0623, 142.0204,
          81.1238, 149.1731,  93.7841, 152.8495, 106.6969, 150.0366, 117.2140,
         143.0139, 128.0127, 134.6162, 136.2848, 124.0394, 142.4920, 112.1615,
         146.6773,  99.0613, 148.7839,  85.1961, 149.7436,  71.6841, 120.6538,
          71.4869,  65.1087,  73.4041, 107.8699,  66.9349, 112.9531,  61.0629,
         121.3813,  59.6407, 130.0779,  61.1604, 136.2276,  65.9876, 135.7935,
          73.4271, 129.9277,  79.9833, 122.1717,  81.6957, 113.4912,  80.2835,
         108.2289,  74.5330,  48.4435,  68.0988,  54.1790,  63.0530,  62.5219,
          61.3594,  70.8014,  63.1315,  76.6232,  69.0428,  76.4814,  75.9973,
          71.4493,  82.0691,  63.2815,  83.4743,  55.1821,  81.1996,  49.3889,
          75.4894, 103.4874,  52.7736, 112.4155,  49.2476, 122.6842,  47.4965,
         132.4787,  46.8541, 141.1226,  48.6486,  41.7827,  50.8491,  50.0719,
          48.9183,  59.9924,  49.5686,  69.1592,  51.7811,  77.6969,  54.1324,
          90.6799,  98.4263,  79.2845, 120.3807,  84.9822, 118.0311,  93.9295,
         117.5373, 101.6449, 117.5125, 108.0155, 119.8419, 107.8514, 124.6610,
         102.1494, 126.9898,  94.1714, 128.0596,  86.1083, 127.3365,  79.6034,
         125.1115]], device='cuda:0')
tensor([[ 40.4267,  80.7237,  42.6086,  96.0435,  45.3944, 111.0110,  49.7651,
         124.9999,  56.9952, 137.9037,  66.3342, 148.3575,  77.8790, 157.8377,
          90.1369, 165.8020, 104.2126, 169.8244, 118.5539, 166.7348, 130.2775,
         159.0126, 142.2201, 149.5702, 151.4335, 137.8582, 158.3295, 124.7115,
         163.0355, 110.1053, 165.3633,  94.7194, 166.3613,  79.6418, 134.1850,
          79.4294,  72.3388,  81.5607, 119.8324,  74.3529, 125.5455,  67.8603,
         134.9263,  66.2948, 144.4920,  67.8639, 151.4510,  73.2532, 150.9135,
          81.6319, 144.3652,  88.8173, 135.7571,  90.8480, 126.1716,  89.2020,
         120.2743,  82.8072,  53.8729,  75.6991,  60.2023,  70.0735,  69.4939,
          68.2002,  78.6139,  70.2079,  85.1672,  76.7301,  84.9541,  84.4755,
          79.4979,  91.2148,  70.3671,  92.7777,  61.3314,  90.1909,  54.9394,
          83.9107, 115.0275,  58.6244, 124.9398,  54.7133, 136.3089,  52.7700,
         147.2414,  52.1351, 156.8271,  54.0910,  46.4749,  56.5022,  55.6046,
          54.3437,  66.6356,  55.0811,  76.7978,  57.5894,  86.3705,  60.2109,
         100.7473, 109.4601,  88.0461, 133.7456,  94.3873, 131.1316, 104.3623,
         130.6813, 112.9865, 130.6291, 120.0461, 133.1330, 119.8484, 138.4815,
         113.4756, 141.1066, 104.6164, 142.2893,  95.6091, 141.5088,  88.4484,
         139.0499]], device='cuda:0')
tensor([[ 28.7274,  57.4245,  30.3153,  68.3526,  32.2991,  78.9344,  35.4151,
          88.9072,  40.5775,  98.0958,  47.1861, 105.5195,  55.3651, 112.2546,
          64.1081, 117.9071,  74.1235, 120.7828,  84.3262, 118.5481,  92.6307,
         113.0109, 101.2028, 106.3856, 107.7096,  98.0236, 112.6244,  88.6567,
         115.9286,  78.3027, 117.5947,  67.3447, 118.3195,  56.6612,  95.3488,
          56.4710,  51.4459,  58.0081,  85.2529,  52.9117,  89.2917,  48.2470,
          95.9215,  47.1253, 102.7917,  48.3569, 107.6710,  52.1593, 107.3295,
          58.0577, 102.6863,  63.2044,  96.5447,  64.5609,  89.7199,  63.4605,
          85.5234,  58.8912,  38.2758,  53.8023,  42.8271,  49.8213,  49.4297,
          48.4952,  55.9632,  49.8990,  60.5538,  54.5556,  60.4557,  60.0548,
          56.4885,  64.8625,  50.0245,  65.9574,  43.6163,  64.1625,  39.0237,
          59.6961,  81.8086,  41.6962,  88.8620,  38.9281,  96.9676,  37.5429,
         104.6918,  37.0182, 111.5551,  38.4401,  33.0213,  40.1858,  39.5718,
          38.6658,  47.4345,  39.1525,  54.6823,  40.9129,  61.3792,  42.8009,
          71.6625,  77.8192,  62.6495,  95.1234,  67.1728,  93.2832,  74.2455,
          92.8890,  80.3557,  92.8659,  85.3678,  94.7263,  85.2436,  98.5260,
          80.7353, 100.3511,  74.4095, 101.2197,  68.0484, 100.6498,  62.8970,
          98.8752]], device='cuda:0')
tensor([[ 41.2571,  82.3602,  43.4712,  98.0253,  46.3275, 113.2738,  50.7802,
         127.5703,  58.1833, 140.7290,  67.7058, 151.3846,  79.4764, 161.0555,
          91.9793, 169.1891, 106.3401, 173.3033, 120.9861, 170.1459, 132.9359,
         162.2403, 145.1375, 152.6236, 154.5450, 140.6784, 161.5767, 127.2315,
         166.3370, 112.3432, 168.7494,  96.6352, 169.7732,  81.2829, 136.9096,
          81.0639,  73.8215,  83.2254, 122.2793,  75.8832, 128.1073,  69.2614,
         137.6752,  67.6444, 147.4668,  69.2837, 154.5239,  74.7831, 154.0001,
          83.2898, 147.3275,  90.6582, 138.5404,  92.6877, 128.7403,  91.0190,
         122.7340,  84.5216,  54.9680,  77.2400,  61.4393,  71.4956,  70.9107,
          69.5941,  80.2441,  71.6321,  86.9041,  78.2988,  86.6989,  86.2063,
          81.0879,  93.0718,  71.7932,  94.6744,  62.5881,  92.0488,  56.0421,
          85.6123, 117.3717,  59.8355, 127.4976,  55.8438, 139.0932,  53.8538,
         150.2419,  53.1769, 160.0344,  55.1969,  47.4151,  57.6573,  56.7502,
          55.4618,  68.0123,  56.2050,  78.3896,  58.7645,  88.1290,  61.4320,
         102.8156, 111.6591,  89.8672, 136.4973,  96.3347, 133.8242, 106.4951,
         133.3352, 115.2736, 133.2860, 122.4889, 135.8745, 122.3022, 141.3414,
         115.8043, 144.0033, 106.7761, 145.2088,  97.5900, 144.4005,  90.2634,
         141.8875]], device='cuda:0')
202306281104_CommonCnn
Training sample instances: 856
Validation sample instances: 17
{'image': tensor([[[0.4078, 0.3765, 0.3373,  ..., 0.4118, 0.3882, 0.3608],
         [0.3804, 0.3686, 0.3569,  ..., 0.3843, 0.3882, 0.3882],
         [0.3373, 0.3608, 0.3882,  ..., 0.3451, 0.3922, 0.4314],
         ...,
         [1.0000, 1.0000, 1.0000,  ..., 0.9843, 0.9882, 0.9922],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9843, 0.9882],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9804, 0.9843]],

        [[0.4078, 0.3765, 0.3373,  ..., 0.4118, 0.3882, 0.3608],
         [0.3804, 0.3686, 0.3569,  ..., 0.3843, 0.3882, 0.3882],
         [0.3373, 0.3608, 0.3882,  ..., 0.3451, 0.3922, 0.4314],
         ...,
         [1.0000, 1.0000, 1.0000,  ..., 0.9843, 0.9882, 0.9922],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9843, 0.9882],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9804, 0.9843]],

        [[0.4078, 0.3765, 0.3373,  ..., 0.4118, 0.3882, 0.3608],
         [0.3804, 0.3686, 0.3569,  ..., 0.3843, 0.3882, 0.3882],
         [0.3373, 0.3608, 0.3882,  ..., 0.3451, 0.3922, 0.4314],
         ...,
         [1.0000, 1.0000, 1.0000,  ..., 0.9843, 0.9882, 0.9922],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9843, 0.9882],
         [1.0000, 1.0000, 1.0000,  ..., 0.9804, 0.9804, 0.9843]]]), 'keypoints': tensor([[ 44.6179,  82.7056],
        [ 46.5456,  91.4227],
        [ 47.7504, 104.8718],
        [ 52.0876, 116.8267],
        [ 58.5935, 127.2871],
        [ 67.2680, 135.2570],
        [ 77.3883, 141.4834],
        [ 87.7496, 147.2118],
        [100.2794, 150.2005],
        [112.3274, 147.9590],
        [123.6525, 141.7325],
        [133.0499, 133.7626],
        [141.4834, 125.5437],
        [148.4713, 115.0832],
        [153.0495, 103.6265],
        [156.6639,  91.4227],
        [157.1458,  77.9735],
        [129.4355,  77.9735],
        [ 68.4728,  81.9585],
        [121.7248,  76.9773],
        [126.0621,  72.2452],
        [131.6041,  70.5017],
        [138.1100,  70.9999],
        [142.9292,  73.9886],
        [143.4111,  79.2188],
        [138.8329,  83.2037],
        [132.5679,  83.7019],
        [126.3030,  83.4528],
        [120.2790,  81.9585],
        [ 56.9068,  78.9697],
        [ 61.7260,  74.9848],
        [ 67.9909,  73.4905],
        [ 74.7378,  73.7395],
        [ 78.8341,  77.4754],
        [ 78.8341,  83.2037],
        [ 74.4968,  86.6906],
        [ 68.4728,  88.6830],
        [ 62.2079,  88.4340],
        [ 58.1116,  83.9509],
        [106.7853,  77.2263],
        [114.9779,  68.0112],
        [124.6163,  62.5319],
        [135.4595,  59.2941],
        [146.0617,  60.5394],
        [ 48.7142,  68.0112],
        [ 59.0754,  62.7809],
        [ 69.9186,  64.7734],
        [ 79.5570,  71.2489],
        [ 88.2315,  72.7433],
        [106.3034, 103.1284],
        [ 87.2676, 129.7013],
        [ 95.2193, 125.7164],
        [103.4119, 122.4786],
        [111.8455, 123.7239],
        [118.1104, 127.9579],
        [118.1104, 128.7815],
        [111.8455, 124.5475],
        [103.4119, 123.3022],
        [ 95.2193, 126.5399],
        [ 87.2676, 130.5249]])}
train_tensor_dataの数 856
valid_tensor_dataの数 17
ModuleSpec(name='CommonCnn', loader=<_frozen_importlib_external.SourceFileLoader object at 0x7f8b69ca6490>, origin='/root/source/train_runner/./models/CommonCnn.py')
Epoch 1 of 20000
Train Loss: 10707.8838
Val Loss: 10752.5576
Epoch 2 of 20000
Epoch 3 of 20000
Epoch 4 of 20000
Epoch 5 of 20000
Epoch 6 of 20000
Epoch 7 of 20000
Epoch 8 of 20000
Epoch 9 of 20000
Epoch 10 of 20000
Epoch 11 of 20000
Epoch 12 of 20000
Epoch 13 of 20000
Epoch 14 of 20000
Epoch 15 of 20000
Epoch 16 of 20000
Epoch 17 of 20000
Epoch 18 of 20000
Epoch 19 of 20000
Epoch 20 of 20000
Epoch 21 of 20000
Epoch 22 of 20000
Epoch 23 of 20000
Epoch 24 of 20000
Epoch 25 of 20000
Epoch 26 of 20000
Epoch 27 of 20000
Epoch 28 of 20000
Epoch 29 of 20000
Epoch 30 of 20000
Epoch 31 of 20000
Epoch 32 of 20000
Epoch 33 of 20000
Epoch 34 of 20000
Epoch 35 of 20000
Epoch 36 of 20000
Epoch 37 of 20000
Epoch 38 of 20000
Epoch 39 of 20000
Epoch 40 of 20000
Epoch 41 of 20000
Traceback (most recent call last):
  File "train.py", line 572, in <module>
    main()
  File "train.py", line 408, in main
    train_epoch_loss = fit(
  File "train.py", line 196, in fit
    train_running_loss += loss.item()
KeyboardInterrupt
202306281105_CommonCnn
Traceback (most recent call last):
  File "train.py", line 572, in <module>
    main()
  File "train.py", line 353, in main
    training_samples, valid_samples = train_test_split(
  File "train.py", line 53, in train_test_split
    df_data = pd.read_csv(csv_path, header=None)
  File "/usr/local/lib/python3.8/dist-packages/pandas/io/parsers/readers.py", line 912, in read_csv
    return _read(filepath_or_buffer, kwds)
  File "/usr/local/lib/python3.8/dist-packages/pandas/io/parsers/readers.py", line 583, in _read
    return parser.read(nrows)
  File "/usr/local/lib/python3.8/dist-packages/pandas/io/parsers/readers.py", line 1704, in read
    ) = self._engine.read(  # type: ignore[attr-defined]
  File "/usr/local/lib/python3.8/dist-packages/pandas/io/parsers/c_parser_wrapper.py", line 234, in read
    chunks = self._reader.read_low_memory(nrows)
  File "pandas/_libs/parsers.pyx", line 812, in pandas._libs.parsers.TextReader.read_low_memory
  File "pandas/_libs/parsers.pyx", line 889, in pandas._libs.parsers.TextReader._read_rows
  File "pandas/_libs/parsers.pyx", line 1034, in pandas._libs.parsers.TextReader._convert_column_data
  File "pandas/_libs/parsers.pyx", line 1088, in pandas._libs.parsers.TextReader._convert_tokens
  File "pandas/_libs/parsers.pyx", line 1163, in pandas._libs.parsers.TextReader._convert_with_dtype
  File "/usr/local/lib/python3.8/dist-packages/pandas/core/dtypes/common.py", line 1335, in is_extension_array_dtype
    def is_extension_array_dtype(arr_or_dtype) -> bool:
KeyboardInterrupt
202306290843_resnet18
Training sample instances: 856
Validation sample instances: 17
{'image': tensor([[[0.6549, 0.6667, 0.6667,  ..., 0.8000, 0.5137, 0.8784],
         [0.9765, 0.9843, 0.9843,  ..., 0.8000, 0.5922, 0.5569],
         [0.7216, 0.7255, 0.7216,  ..., 0.5765, 0.8745, 0.4118],
         ...,
         [0.7961, 0.7961, 0.7961,  ..., 0.9922, 0.9608, 0.6275],
         [0.7922, 0.7922, 0.7882,  ..., 0.9922, 0.9882, 0.8235],
         [0.9765, 0.9804, 0.9843,  ..., 0.9922, 0.9725, 0.8902]],

        [[0.6549, 0.6667, 0.6667,  ..., 0.8000, 0.5137, 0.8784],
         [0.9765, 0.9843, 0.9843,  ..., 0.8000, 0.5922, 0.5569],
         [0.7216, 0.7255, 0.7216,  ..., 0.5765, 0.8745, 0.4118],
         ...,
         [0.7961, 0.7961, 0.7961,  ..., 0.9922, 0.9608, 0.6275],
         [0.7922, 0.7922, 0.7882,  ..., 0.9922, 0.9882, 0.8235],
         [0.9765, 0.9804, 0.9843,  ..., 0.9922, 0.9725, 0.8902]],

        [[0.6549, 0.6667, 0.6667,  ..., 0.8000, 0.5137, 0.8784],
         [0.9765, 0.9843, 0.9843,  ..., 0.8000, 0.5922, 0.5569],
         [0.7216, 0.7255, 0.7216,  ..., 0.5765, 0.8745, 0.4118],
         ...,
         [0.7961, 0.7961, 0.7961,  ..., 0.9922, 0.9608, 0.6275],
         [0.7922, 0.7922, 0.7882,  ..., 0.9922, 0.9882, 0.8235],
         [0.9765, 0.9804, 0.9843,  ..., 0.9922, 0.9725, 0.8902]]]), 'keypoints': tensor([[  6.5552,  65.7091],
        [  7.9834,  85.7337],
        [ 10.3638, 105.7583],
        [ 12.7443, 125.3476],
        [ 24.4083, 138.8424],
        [ 38.6908, 149.5077],
        [ 53.2113, 159.9553],
        [ 67.7318, 170.4029],
        [ 83.6806, 178.2387],
        [100.5816, 174.7561],
        [113.4358, 164.9615],
        [127.7183, 154.0785],
        [140.8106, 143.1956],
        [150.3322, 129.0478],
        [158.1876, 112.7234],
        [166.2810,  96.6166],
        [171.9940,  80.9452],
        [142.4769,  83.1218],
        [ 62.7330,  75.0684],
        [132.2411,  73.9801],
        [138.6682,  61.3559],
        [151.7605,  55.9145],
        [164.3767,  62.2266],
        [168.6614,  74.4155],
        [166.0430,  85.2984],
        [157.9495,  97.2696],
        [145.5714, 104.2347],
        [131.2889, 101.8405],
        [129.8607,  88.5633],
        [ 31.5495,  61.5736],
        [ 46.5461,  48.7317],
        [ 68.2079,  43.2903],
        [ 88.9175,  48.0788],
        [ 98.6772,  64.4032],
        [ 93.6784,  83.1218],
        [ 81.3002,  98.1403],
        [ 60.5906, 100.3168],
        [ 41.3092,  94.0047],
        [ 30.3593,  77.8980],
        [148.4279,  32.6250],
        [158.6637,  33.0603],
        [167.2332,  35.8899],
        [175.0885,  40.4607],
        [180.8015,  45.6845],
        [ 29.4072,  28.7071],
        [ 47.9744,  24.1363],
        [ 68.2079,  22.1774],
        [ 88.9175,  22.3950],
        [106.5326,  26.3129],
        [128.4324, 117.0766],
        [101.2957, 137.0191],
        [105.1043, 135.2779],
        [111.0554, 134.6249],
        [116.2923, 135.9308],
        [119.1488, 137.8898],
        [119.1488, 138.1895],
        [116.2923, 136.2305],
        [111.0554, 134.9246],
        [105.1043, 135.5775],
        [101.2957, 137.3188]])}
train_tensor_dataの数 856
valid_tensor_dataの数 17
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (fc): Linear(in_features=512, out_features=120, bias=True)
)
Epoch 1 of 10000
Train Loss: 10909.1470
Val Loss: 10393.9082
Epoch 2 of 10000
Epoch 3 of 10000
Epoch 4 of 10000
Epoch 5 of 10000
Epoch 6 of 10000
Epoch 7 of 10000
Epoch 8 of 10000
Epoch 9 of 10000
Epoch 10 of 10000
Epoch 11 of 10000
Epoch 12 of 10000
Epoch 13 of 10000
Epoch 14 of 10000
Epoch 15 of 10000
Epoch 16 of 10000
Epoch 17 of 10000
Epoch 18 of 10000
Epoch 19 of 10000
Epoch 20 of 10000
Epoch 21 of 10000
Epoch 22 of 10000
Epoch 23 of 10000
Epoch 24 of 10000
Epoch 25 of 10000
Epoch 26 of 10000
Epoch 27 of 10000
Epoch 28 of 10000
Epoch 29 of 10000
Epoch 30 of 10000
Epoch 31 of 10000
Epoch 32 of 10000
Epoch 33 of 10000
Epoch 34 of 10000
Epoch 35 of 10000
Epoch 36 of 10000
Epoch 37 of 10000
Epoch 38 of 10000
Epoch 39 of 10000
Epoch 40 of 10000
Epoch 41 of 10000
Epoch 42 of 10000
Epoch 43 of 10000
Epoch 44 of 10000
Epoch 45 of 10000
Epoch 46 of 10000
Epoch 47 of 10000
Epoch 48 of 10000
Epoch 49 of 10000
Epoch 50 of 10000
Train Loss: 7634.1473
Val Loss: 7398.2100
tensor([[17.0678, 16.1205, 16.5067, 17.2796, 16.2201, 16.8251, 17.0085, 17.1471,
         16.6301, 17.5305, 18.1976, 17.7155, 18.5313, 18.0510, 17.3634, 18.7329,
         17.9376, 18.9258, 17.9274, 18.6459, 17.6955, 17.6806, 18.6903, 16.8410,
         19.2014, 18.3607, 19.1215, 17.8107, 19.1538, 17.6898, 18.8729, 18.2182,
         17.9802, 17.4984, 18.5056, 17.0560, 16.1338, 18.1914, 17.4424, 17.1526,
         17.1740, 15.5780, 16.4514, 17.1040, 18.3928, 18.1060, 16.8015, 16.5372,
         17.6209, 17.6883, 16.9534, 16.7859, 18.4425, 17.5031, 19.6076, 16.9732,
         17.2346, 17.4270, 16.5018, 16.4045, 17.0672, 16.1603, 17.5225, 17.4934,
         16.0230, 19.9099, 16.5571, 18.0867, 18.0914, 16.2089, 16.3429, 18.2884,
         16.6525, 16.9496, 18.1648, 16.6865, 18.5670, 18.2203, 17.3684, 17.9679,
         15.3643, 16.5773, 18.2244, 17.8361, 17.2028, 16.5610, 17.7605, 16.8244,
         15.3394, 17.3602, 16.3968, 17.2452, 15.8679, 16.8400, 17.9365, 17.3190,
         19.4913, 19.4619, 17.4428, 18.5464, 16.8985, 17.5441, 18.4393, 17.2228,
         17.6863, 16.9812, 17.6559, 16.7200, 17.1549, 18.9376, 16.7263, 17.6457,
         16.8455, 16.9996, 17.4399, 15.5153, 16.8369, 19.4813, 17.7174, 17.3785]],
       device='cuda:0')
tensor([[16.9141, 15.9961, 16.3723, 17.1269, 16.0769, 16.6559, 16.8693, 16.9897,
         16.4877, 17.3727, 18.0475, 17.5644, 18.3769, 17.8922, 17.2029, 18.5821,
         17.7907, 18.7524, 17.7716, 18.4936, 17.5429, 17.5357, 18.5038, 16.6838,
         19.0529, 18.2090, 18.9421, 17.6531, 18.9967, 17.5265, 18.6984, 18.0516,
         17.8204, 17.3374, 18.3580, 16.9066, 15.9961, 18.0249, 17.2700, 16.9941,
         17.0302, 15.4560, 16.3071, 16.9480, 18.2422, 17.9466, 16.6568, 16.3982,
         17.4715, 17.5242, 16.7974, 16.6393, 18.2811, 17.3320, 19.4410, 16.8141,
         17.0878, 17.2755, 16.3439, 16.2631, 16.9153, 16.0160, 17.3901, 17.3419,
         15.8746, 19.7519, 16.4080, 17.9456, 17.9331, 16.0643, 16.2034, 18.1366,
         16.5069, 16.8124, 18.0201, 16.5500, 18.4093, 18.0442, 17.2226, 17.7998,
         15.2359, 16.4180, 18.0518, 17.6705, 17.0628, 16.4233, 17.5953, 16.6788,
         15.2045, 17.1981, 16.2649, 17.0854, 15.7175, 16.6821, 17.7903, 17.1641,
         19.3297, 19.2926, 17.2929, 18.3815, 16.7515, 17.3873, 18.2788, 17.0619,
         17.5407, 16.8329, 17.4934, 16.5638, 16.9874, 18.7697, 16.5903, 17.4942,
         16.7023, 16.8547, 17.2852, 15.3661, 16.6980, 19.3052, 17.5643, 17.2324]],
       device='cuda:0')
tensor([[16.7382, 15.7912, 16.1853, 16.9170, 15.9055, 16.4392, 16.6946, 16.7922,
         16.3143, 17.1682, 17.8625, 17.3684, 18.1710, 17.6842, 17.0291, 18.3867,
         17.5734, 18.5355, 17.5674, 18.2794, 17.3520, 17.3352, 18.3018, 16.4777,
         18.8263, 17.9882, 18.7312, 17.4657, 18.7782, 17.3059, 18.4847, 17.8200,
         17.6126, 17.1434, 18.1698, 16.7063, 15.8132, 17.8221, 17.0713, 16.7963,
         16.8594, 15.2917, 16.1311, 16.7401, 18.0503, 17.7208, 16.4597, 16.2212,
         17.2637, 17.2978, 16.6174, 16.4301, 18.0820, 17.1587, 19.2158, 16.6101,
         16.9212, 17.0775, 16.1634, 16.0804, 16.7271, 15.8182, 17.1956, 17.1533,
         15.6888, 19.5310, 16.2082, 17.7176, 17.7404, 15.8740, 16.0234, 17.9321,
         16.3349, 16.6302, 17.8105, 16.3688, 18.2192, 17.8496, 17.0231, 17.5994,
         15.0559, 16.2217, 17.8402, 17.4537, 16.8735, 16.2504, 17.3807, 16.4984,
         15.0430, 16.9972, 16.0783, 16.8838, 15.5527, 16.4982, 17.5947, 16.9645,
         19.0839, 19.0660, 17.0906, 18.1658, 16.5830, 17.2019, 18.0806, 16.8492,
         17.3478, 16.6235, 17.2990, 16.3974, 16.8083, 18.5434, 16.4021, 17.2936,
         16.5166, 16.6352, 17.0940, 15.1953, 16.4963, 19.0743, 17.3935, 17.0423]],
       device='cuda:0')
tensor([[16.8138, 15.8927, 16.2777, 17.0148, 15.9830, 16.5440, 16.7695, 16.8945,
         16.3983, 17.2732, 17.9504, 17.4625, 18.2645, 17.7710, 17.1076, 18.4867,
         17.6823, 18.6409, 17.6649, 18.3783, 17.4400, 17.4254, 18.4016, 16.5836,
         18.9427, 18.0945, 18.8312, 17.5529, 18.8906, 17.4085, 18.5834, 17.9270,
         17.7179, 17.2278, 18.2579, 16.7965, 15.9090, 17.9238, 17.1725, 16.8876,
         16.9413, 15.3757, 16.2217, 16.8405, 18.1514, 17.8324, 16.5547, 16.3051,
         17.3646, 17.4024, 16.7043, 16.5311, 18.1770, 17.2444, 19.3152, 16.7226,
         17.0025, 17.1757, 16.2473, 16.1684, 16.8228, 15.9031, 17.2931, 17.2508,
         15.7803, 19.6413, 16.3110, 17.8231, 17.8385, 15.9672, 16.1127, 18.0276,
         16.4141, 16.7184, 17.9147, 16.4587, 18.3136, 17.9464, 17.1238, 17.6922,
         15.1353, 16.3183, 17.9483, 17.5556, 16.9633, 16.3331, 17.4958, 16.5785,
         15.1202, 17.0933, 16.1681, 16.9786, 15.6308, 16.5792, 17.6920, 17.0657,
         19.1995, 19.1813, 17.2001, 18.2666, 16.6670, 17.2915, 18.1649, 16.9336,
         17.4453, 16.7266, 17.3991, 16.4739, 16.8922, 18.6462, 16.5015, 17.3889,
         16.6020, 16.7491, 17.1828, 15.2793, 16.5942, 19.1835, 17.4805, 17.1419]],
       device='cuda:0')
tensor([[16.9242, 15.9828, 16.3682, 17.1296, 16.0883, 16.6642, 16.8762, 17.0031,
         16.4975, 17.3781, 18.0533, 17.5634, 18.3742, 17.8953, 17.2215, 18.5926,
         17.7883, 18.7574, 17.7712, 18.4917, 17.5476, 17.5359, 18.5132, 16.6865,
         19.0572, 18.2051, 18.9551, 17.6578, 18.9957, 17.5201, 18.7035, 18.0565,
         17.8234, 17.3476, 18.3599, 16.8951, 16.0047, 18.0433, 17.2823, 16.9916,
         17.0301, 15.4638, 16.3113, 16.9501, 18.2487, 17.9409, 16.6578, 16.4101,
         17.4718, 17.5139, 16.8012, 16.6309, 18.2737, 17.3488, 19.4429, 16.8198,
         17.0961, 17.2841, 16.3506, 16.2623, 16.9216, 16.0256, 17.3967, 17.3537,
         15.8858, 19.7535, 16.4135, 17.9306, 17.9511, 16.0703, 16.2087, 18.1440,
         16.5152, 16.8231, 18.0223, 16.5506, 18.4170, 18.0567, 17.2192, 17.8108,
         15.2264, 16.4182, 18.0672, 17.6697, 17.0696, 16.4214, 17.6049, 16.6820,
         15.2089, 17.2033, 16.2740, 17.0934, 15.7296, 16.6862, 17.7947, 17.1765,
         19.3130, 19.2805, 17.3012, 18.3788, 16.7596, 17.3921, 18.2796, 17.0519,
         17.5454, 16.8259, 17.5057, 16.5736, 17.0014, 18.7662, 16.5908, 17.4929,
         16.7144, 16.8599, 17.2905, 15.3713, 16.7022, 19.3135, 17.5831, 17.2378]],
       device='cuda:0')
tensor([[16.9508, 16.0119, 16.4002, 17.1485, 16.1126, 16.6763, 16.8949, 17.0244,
         16.5195, 17.4058, 18.0863, 17.5989, 18.4036, 17.9204, 17.2397, 18.6158,
         17.8280, 18.7837, 17.7969, 18.5199, 17.5693, 17.5706, 18.5469, 16.7211,
         19.0907, 18.2339, 18.9875, 17.6942, 19.0367, 17.5572, 18.7389, 18.0858,
         17.8549, 17.3596, 18.3931, 16.9385, 16.0190, 18.0643, 17.3053, 17.0281,
         17.0691, 15.4899, 16.3319, 16.9805, 18.2821, 17.9704, 16.6833, 16.4403,
         17.5072, 17.5464, 16.8268, 16.6557, 18.3140, 17.3762, 19.4718, 16.8412,
         17.1143, 17.3092, 16.3732, 16.2978, 16.9615, 16.0374, 17.4164, 17.3702,
         15.9053, 19.7758, 16.4496, 17.9697, 17.9763, 16.0865, 16.2377, 18.1620,
         16.5305, 16.8453, 18.0470, 16.5796, 18.4395, 18.0832, 17.2546, 17.8351,
         15.2547, 16.4412, 18.0811, 17.7001, 17.0928, 16.4601, 17.6293, 16.7052,
         15.2318, 17.2261, 16.3032, 17.1209, 15.7581, 16.7183, 17.8289, 17.1980,
         19.3547, 19.3234, 17.3216, 18.4169, 16.7848, 17.4291, 18.3137, 17.0834,
         17.5683, 16.8524, 17.5261, 16.5998, 17.0248, 18.7928, 16.6177, 17.5206,
         16.7391, 16.8844, 17.3185, 15.4019, 16.7287, 19.3369, 17.6054, 17.2675]],
       device='cuda:0')
tensor([[16.9304, 15.9801, 16.3804, 17.1227, 16.0945, 16.6617, 16.8808, 17.0072,
         16.4948, 17.3808, 18.0575, 17.5776, 18.3882, 17.9005, 17.2275, 18.5917,
         17.7941, 18.7609, 17.7798, 18.5020, 17.5517, 17.5359, 18.5223, 16.6911,
         19.0528, 18.2066, 18.9561, 17.6675, 19.0079, 17.5335, 18.7107, 18.0527,
         17.8290, 17.3443, 18.3647, 16.9084, 15.9999, 18.0449, 17.2969, 17.0095,
         17.0442, 15.4630, 16.3195, 16.9547, 18.2603, 17.9478, 16.6664, 16.4089,
         17.4825, 17.5181, 16.8046, 16.6437, 18.2812, 17.3667, 19.4500, 16.8333,
         17.0900, 17.2904, 16.3455, 16.2829, 16.9314, 16.0249, 17.3969, 17.3550,
         15.8862, 19.7499, 16.4163, 17.9378, 17.9584, 16.0710, 16.2077, 18.1340,
         16.5206, 16.8287, 18.0217, 16.5610, 18.4202, 18.0653, 17.2279, 17.8166,
         15.2379, 16.4315, 18.0662, 17.6780, 17.0788, 16.4335, 17.6132, 16.6849,
         15.2178, 17.2153, 16.2808, 17.0976, 15.7385, 16.6892, 17.8109, 17.1745,
         19.3285, 19.3062, 17.3039, 18.3865, 16.7686, 17.3899, 18.2915, 17.0588,
         17.5516, 16.8279, 17.5120, 16.5777, 17.0173, 18.7621, 16.6030, 17.5016,
         16.7145, 16.8590, 17.3009, 15.3871, 16.7056, 19.3138, 17.5871, 17.2442]],
       device='cuda:0')
tensor([[16.8549, 15.9268, 16.3102, 17.0578, 16.0264, 16.5820, 16.8101, 16.9303,
         16.4341, 17.2910, 17.9853, 17.4887, 18.3049, 17.8131, 17.1430, 18.5123,
         17.7238, 18.6659, 17.6978, 18.4172, 17.4649, 17.4553, 18.4398, 16.6191,
         18.9729, 18.1289, 18.8838, 17.5881, 18.9225, 17.4452, 18.6286, 17.9706,
         17.7473, 17.2596, 18.3038, 16.8305, 15.9244, 17.9662, 17.1913, 16.9207,
         16.9760, 15.4034, 16.2326, 16.8720, 18.1746, 17.8538, 16.5766, 16.3370,
         17.3941, 17.4436, 16.7273, 16.5573, 18.2094, 17.2648, 19.3540, 16.7377,
         17.0240, 17.2095, 16.2674, 16.1939, 16.8484, 15.9395, 17.3267, 17.2713,
         15.8092, 19.6782, 16.3393, 17.8614, 17.8673, 15.9934, 16.1421, 18.0642,
         16.4401, 16.7530, 17.9484, 16.4904, 18.3504, 17.9746, 17.1423, 17.7300,
         15.1773, 16.3409, 17.9728, 17.5946, 16.9981, 16.3702, 17.5311, 16.6093,
         15.1479, 17.1182, 16.2111, 17.0142, 15.6719, 16.6244, 17.7300, 17.1007,
         19.2435, 19.2164, 17.2079, 18.3057, 16.6878, 17.3140, 18.2094, 16.9798,
         17.4697, 16.7443, 17.4168, 16.5017, 16.9265, 18.6874, 16.5212, 17.4317,
         16.6372, 16.7856, 17.2257, 15.2995, 16.6367, 19.2241, 17.5126, 17.1690]],
       device='cuda:0')
tensor([[16.9753, 16.0256, 16.4180, 17.1678, 16.1332, 16.7033, 16.9185, 17.0465,
         16.5402, 17.4297, 18.1129, 17.6196, 18.4310, 17.9442, 17.2601, 18.6342,
         17.8341, 18.8069, 17.8200, 18.5482, 17.5906, 17.5760, 18.5705, 16.7304,
         19.1064, 18.2522, 19.0095, 17.7069, 19.0467, 17.5712, 18.7560, 18.1013,
         17.8730, 17.3836, 18.4162, 16.9464, 16.0432, 18.0841, 17.3293, 17.0387,
         17.0822, 15.4976, 16.3520, 16.9975, 18.3001, 17.9910, 16.7015, 16.4474,
         17.5274, 17.5721, 16.8449, 16.6828, 18.3347, 17.3950, 19.4929, 16.8705,
         17.1368, 17.3293, 16.3949, 16.3089, 16.9618, 16.0568, 17.4442, 17.3939,
         15.9242, 19.8055, 16.4554, 17.9784, 17.9968, 16.1156, 16.2497, 18.1883,
         16.5559, 16.8558, 18.0633, 16.5987, 18.4702, 18.1056, 17.2611, 17.8534,
         15.2687, 16.4582, 18.1020, 17.7189, 17.1124, 16.4780, 17.6446, 16.7243,
         15.2477, 17.2480, 16.3105, 17.1431, 15.7744, 16.7279, 17.8483, 17.2150,
         19.3778, 19.3457, 17.3386, 18.4315, 16.7975, 17.4437, 18.3271, 17.0964,
         17.5866, 16.8720, 17.5445, 16.6241, 17.0485, 18.8165, 16.6389, 17.5394,
         16.7513, 16.8971, 17.3369, 15.4134, 16.7519, 19.3569, 17.6227, 17.2913]],
       device='cuda:0')
tensor([[16.9069, 15.9706, 16.3609, 17.0910, 16.0596, 16.6295, 16.8541, 16.9799,
         16.4730, 17.3377, 18.0367, 17.5465, 18.3567, 17.8710, 17.2013, 18.5788,
         17.7641, 18.7220, 17.7408, 18.4676, 17.5282, 17.5164, 18.4971, 16.6715,
         19.0251, 18.1790, 18.9308, 17.6278, 18.9668, 17.4973, 18.6827, 18.0370,
         17.7924, 17.3189, 18.3452, 16.8808, 15.9812, 18.0248, 17.2537, 16.9688,
         17.0182, 15.4438, 16.2910, 16.9389, 18.2268, 17.9133, 16.6303, 16.3930,
         17.4487, 17.4962, 16.7768, 16.6106, 18.2563, 17.3288, 19.4001, 16.8014,
         17.0788, 17.2625, 16.3172, 16.2520, 16.8968, 15.9894, 17.3715, 17.3225,
         15.8613, 19.7347, 16.3779, 17.9008, 17.9121, 16.0498, 16.1855, 18.1140,
         16.4962, 16.7924, 18.0086, 16.5312, 18.4006, 18.0344, 17.1939, 17.7806,
         15.2165, 16.3916, 18.0283, 17.6316, 17.0386, 16.4224, 17.5802, 16.6612,
         15.1905, 17.1532, 16.2484, 17.0739, 15.7199, 16.6698, 17.7685, 17.1412,
         19.3055, 19.2702, 17.2698, 18.3442, 16.7419, 17.3737, 18.2607, 17.0371,
         17.5264, 16.8136, 17.4733, 16.5549, 16.9817, 18.7305, 16.5730, 17.4762,
         16.6845, 16.8430, 17.2586, 15.3558, 16.6705, 19.2841, 17.5640, 17.2187]],
       device='cuda:0')
tensor([[16.9370, 16.0012, 16.3836, 17.1320, 16.1000, 16.6806, 16.8895, 17.0154,
         16.5068, 17.3894, 18.0727, 17.5760, 18.3845, 17.9066, 17.2207, 18.5951,
         17.8051, 18.7787, 17.7945, 18.5122, 17.5623, 17.5439, 18.5375, 16.7070,
         19.0624, 18.2277, 18.9604, 17.6772, 19.0137, 17.5497, 18.7219, 18.0616,
         17.8389, 17.3546, 18.3846, 16.9177, 16.0135, 18.0552, 17.2938, 17.0100,
         17.0514, 15.4775, 16.3250, 16.9659, 18.2640, 17.9635, 16.6775, 16.4122,
         17.4952, 17.5396, 16.8186, 16.6563, 18.2956, 17.3691, 19.4635, 16.8354,
         17.1098, 17.2921, 16.3544, 16.2867, 16.9379, 16.0374, 17.4014, 17.3677,
         15.9006, 19.7656, 16.4297, 17.9561, 17.9591, 16.0810, 16.2205, 18.1527,
         16.5216, 16.8293, 18.0329, 16.5624, 18.4285, 18.0736, 17.2308, 17.8268,
         15.2396, 16.4403, 18.0779, 17.6884, 17.0828, 16.4456, 17.6176, 16.6942,
         15.2157, 17.2146, 16.2803, 17.1088, 15.7402, 16.6997, 17.8026, 17.1843,
         19.3361, 19.3161, 17.3130, 18.4000, 16.7675, 17.4132, 18.2941, 17.0773,
         17.5586, 16.8432, 17.5145, 16.5944, 17.0071, 18.7845, 16.6106, 17.5144,
         16.7213, 16.8711, 17.3041, 15.3841, 16.7173, 19.3237, 17.5921, 17.2460]],
       device='cuda:0')
tensor([[16.8633, 15.9365, 16.3213, 17.0607, 16.0357, 16.5874, 16.8143, 16.9440,
         16.4492, 17.3156, 18.0012, 17.5084, 18.3112, 17.8274, 17.1542, 18.5371,
         17.7451, 18.6969, 17.7145, 18.4391, 17.4868, 17.4843, 18.4598, 16.6405,
         18.9965, 18.1464, 18.8876, 17.6082, 18.9383, 17.4608, 18.6403, 17.9942,
         17.7650, 17.2808, 18.3105, 16.8424, 15.9579, 17.9831, 17.2210, 16.9324,
         16.9932, 15.4086, 16.2538, 16.8944, 18.1931, 17.8776, 16.6069, 16.3576,
         17.4233, 17.4580, 16.7509, 16.5778, 18.2267, 17.2949, 19.3791, 16.7667,
         17.0365, 17.2262, 16.2980, 16.2174, 16.8729, 15.9676, 17.3409, 17.2919,
         15.8287, 19.6965, 16.3506, 17.8770, 17.8989, 16.0156, 16.1612, 18.0751,
         16.4525, 16.7730, 17.9596, 16.5017, 18.3587, 17.9973, 17.1689, 17.7522,
         15.1794, 16.3587, 17.9998, 17.6061, 17.0116, 16.3758, 17.5455, 16.6287,
         15.1602, 17.1498, 16.2254, 17.0358, 15.6853, 16.6340, 17.7399, 17.1139,
         19.2632, 19.2293, 17.2373, 18.3199, 16.7030, 17.3335, 18.2293, 17.0025,
         17.4941, 16.7704, 17.4404, 16.5177, 16.9413, 18.7051, 16.5354, 17.4467,
         16.6638, 16.8107, 17.2335, 15.3130, 16.6528, 19.2418, 17.5316, 17.1871]],
       device='cuda:0')
tensor([[16.6525, 15.7480, 16.1235, 16.8551, 15.8377, 16.3710, 16.6255, 16.7295,
         16.2528, 17.1034, 17.7917, 17.2977, 18.1074, 17.6020, 16.9580, 18.3279,
         17.5081, 18.4740, 17.4947, 18.2070, 17.2764, 17.2727, 18.2203, 16.4156,
         18.7590, 17.9203, 18.6409, 17.3798, 18.7093, 17.2309, 18.4124, 17.7413,
         17.5457, 17.0706, 18.0981, 16.6303, 15.7644, 17.7616, 16.9989, 16.7244,
         16.7926, 15.2403, 16.0639, 16.6696, 17.9808, 17.6501, 16.3934, 16.1605,
         17.2000, 17.2334, 16.5376, 16.3726, 18.0090, 17.0683, 19.1388, 16.5483,
         16.8539, 17.0065, 16.0939, 16.0036, 16.6606, 15.7502, 17.1441, 17.0923,
         15.6211, 19.4610, 16.1551, 17.6501, 17.6679, 15.8243, 15.9517, 17.8634,
         16.2609, 16.5728, 17.7443, 16.3018, 18.1411, 17.7754, 16.9578, 17.5257,
         15.0006, 16.1599, 17.7774, 17.3843, 16.7989, 16.1875, 17.3234, 16.4331,
         14.9844, 16.9293, 16.0179, 16.8213, 15.4802, 16.4232, 17.5327, 16.8980,
         19.0209, 18.9977, 17.0267, 18.0907, 16.5211, 17.1334, 18.0055, 16.7773,
         17.2827, 16.5615, 17.2419, 16.3229, 16.7263, 18.4670, 16.3501, 17.2290,
         16.4495, 16.5784, 17.0243, 15.1343, 16.4378, 18.9959, 17.3160, 16.9763]],
       device='cuda:0')
tensor([[16.7688, 15.8525, 16.2302, 16.9657, 15.9620, 16.4983, 16.7402, 16.8700,
         16.3468, 17.2088, 17.8968, 17.4246, 18.2225, 17.7328, 17.0679, 18.4373,
         17.6387, 18.5866, 17.6060, 18.3267, 17.3970, 17.3779, 18.3559, 16.5355,
         18.8786, 18.0540, 18.7821, 17.4992, 18.8329, 17.3585, 18.5315, 17.8917,
         17.6569, 17.1925, 18.2214, 16.7483, 15.8669, 17.8896, 17.1368, 16.8395,
         16.9081, 15.3496, 16.1740, 16.8044, 18.1061, 17.7663, 16.5116, 16.2663,
         17.3243, 17.3602, 16.6567, 16.4928, 18.1220, 17.2072, 19.2783, 16.6581,
         16.9573, 17.1263, 16.1927, 16.1266, 16.7690, 15.8766, 17.2332, 17.2119,
         15.7400, 19.5962, 16.2570, 17.7738, 17.7859, 15.9212, 16.0857, 17.9769,
         16.3959, 16.6746, 17.8711, 16.4172, 18.2732, 17.8898, 17.0675, 17.6478,
         15.0924, 16.2743, 17.8873, 17.5081, 16.9302, 16.2997, 17.4442, 16.5399,
         15.0985, 17.0361, 16.1449, 16.9392, 15.6039, 16.5489, 17.6551, 17.0175,
         19.1496, 19.1268, 17.1443, 18.2167, 16.6146, 17.2459, 18.1341, 16.8876,
         17.3954, 16.6874, 17.3430, 16.4315, 16.8561, 18.5984, 16.4563, 17.3531,
         16.5657, 16.6979, 17.1431, 15.2370, 16.5587, 19.1400, 17.4324, 17.1079]],
       device='cuda:0')
tensor([[16.7613, 15.8503, 16.2313, 16.9587, 15.9486, 16.4843, 16.7259, 16.8381,
         16.3507, 17.2002, 17.8925, 17.4143, 18.2205, 17.7236, 17.0648, 18.4342,
         17.6353, 18.5792, 17.6134, 18.3236, 17.3805, 17.3857, 18.3398, 16.5202,
         18.8820, 18.0307, 18.7761, 17.4929, 18.8176, 17.3477, 18.5310, 17.8663,
         17.6558, 17.1699, 18.2056, 16.7461, 15.8535, 17.8723, 17.1020, 16.8314,
         16.8946, 15.3331, 16.1617, 16.7846, 18.0907, 17.7724, 16.4957, 16.2603,
         17.3115, 17.3482, 16.6428, 16.4729, 18.1212, 17.1791, 19.2579, 16.6501,
         16.9526, 17.1207, 16.1985, 16.1188, 16.7661, 15.8503, 17.2375, 17.1980,
         15.7217, 19.5863, 16.2506, 17.7586, 17.7724, 15.9138, 16.0576, 17.9733,
         16.3581, 16.6687, 17.8609, 16.4033, 18.2636, 17.8826, 17.0664, 17.6389,
         15.0953, 16.2542, 17.8787, 17.4957, 16.9192, 16.2865, 17.4371, 16.5329,
         15.0803, 17.0289, 16.1374, 16.9337, 15.5813, 16.5302, 17.6441, 17.0130,
         19.1379, 19.1204, 17.1333, 18.2038, 16.6210, 17.2261, 18.1257, 16.8854,
         17.4041, 16.6657, 17.3354, 16.4217, 16.8462, 18.5784, 16.4500, 17.3382,
         16.5522, 16.6954, 17.1329, 15.2348, 16.5453, 19.1297, 17.4224, 17.0842]],
       device='cuda:0')
tensor([[16.8354, 15.9038, 16.3012, 17.0324, 16.0151, 16.5649, 16.7996, 16.9166,
         16.4162, 17.2743, 17.9678, 17.4811, 18.2880, 17.8019, 17.1247, 18.4991,
         17.7142, 18.6544, 17.6770, 18.4006, 17.4534, 17.4495, 18.4146, 16.6016,
         18.9477, 18.1189, 18.8600, 17.5656, 18.8975, 17.4234, 18.6093, 17.9622,
         17.7312, 17.2488, 18.2832, 16.8241, 15.9198, 17.9512, 17.1872, 16.9060,
         16.9623, 15.3884, 16.2278, 16.8631, 18.1678, 17.8419, 16.5673, 16.3307,
         17.3932, 17.4283, 16.7164, 16.5484, 18.1944, 17.2572, 19.3381, 16.7198,
         17.0069, 17.1943, 16.2583, 16.1817, 16.8437, 15.9304, 17.3145, 17.2590,
         15.7955, 19.6650, 16.3236, 17.8447, 17.8590, 15.9869, 16.1396, 18.0394,
         16.4340, 16.7334, 17.9329, 16.4708, 18.3289, 17.9625, 17.1293, 17.7096,
         15.1635, 16.3232, 17.9447, 17.5852, 16.9958, 16.3552, 17.5120, 16.5923,
         15.1425, 17.1051, 16.2033, 17.0086, 15.6543, 16.6080, 17.7183, 17.0840,
         19.2286, 19.1892, 17.2044, 18.2832, 16.6780, 17.3074, 18.2078, 16.9637,
         17.4633, 16.7458, 17.4057, 16.4959, 16.9119, 18.6603, 16.5192, 17.4226,
         16.6232, 16.7703, 17.2026, 15.2918, 16.6213, 19.2093, 17.4936, 17.1680]],
       device='cuda:0')
tensor([[16.9618, 16.0110, 16.4092, 17.1555, 16.1219, 16.6903, 16.8960, 17.0353,
         16.5253, 17.4126, 18.0846, 17.6076, 18.4105, 17.9288, 17.2521, 18.6236,
         17.8262, 18.7911, 17.8094, 18.5282, 17.5810, 17.5722, 18.5552, 16.7239,
         19.0855, 18.2329, 18.9910, 17.6972, 19.0454, 17.5562, 18.7454, 18.0856,
         17.8638, 17.3687, 18.4012, 16.9390, 16.0184, 18.0680, 17.3153, 17.0267,
         17.0676, 15.4911, 16.3402, 16.9940, 18.2864, 17.9813, 16.6902, 16.4383,
         17.5110, 17.5537, 16.8381, 16.6692, 18.3184, 17.3880, 19.4774, 16.8508,
         17.1276, 17.3114, 16.3829, 16.2950, 16.9528, 16.0456, 17.4212, 17.3930,
         15.9137, 19.7850, 16.4474, 17.9720, 17.9793, 16.1013, 16.2388, 18.1701,
         16.5470, 16.8474, 18.0543, 16.5812, 18.4468, 18.0937, 17.2569, 17.8474,
         15.2605, 16.4544, 18.0948, 17.7089, 17.0932, 16.4661, 17.6335, 16.7182,
         15.2383, 17.2333, 16.2994, 17.1304, 15.7572, 16.7177, 17.8213, 17.2108,
         19.3637, 19.3352, 17.3298, 18.4173, 16.7879, 17.4313, 18.3142, 17.0904,
         17.5806, 16.8620, 17.5349, 16.6081, 17.0398, 18.8027, 16.6261, 17.5248,
         16.7397, 16.8899, 17.3248, 15.4112, 16.7281, 19.3455, 17.6121, 17.2707]],
       device='cuda:0')
Epoch 51 of 10000
Epoch 52 of 10000
Epoch 53 of 10000
Epoch 54 of 10000
Epoch 55 of 10000
Epoch 56 of 10000
Epoch 57 of 10000
Epoch 58 of 10000
Epoch 59 of 10000
Epoch 60 of 10000
Epoch 61 of 10000
Epoch 62 of 10000
Epoch 63 of 10000
Epoch 64 of 10000
Epoch 65 of 10000
Epoch 66 of 10000
Epoch 67 of 10000
Epoch 68 of 10000
Epoch 69 of 10000
Epoch 70 of 10000
Epoch 71 of 10000
Epoch 72 of 10000
Epoch 73 of 10000
Epoch 74 of 10000
Epoch 75 of 10000
Epoch 76 of 10000
Epoch 77 of 10000
Epoch 78 of 10000
Epoch 79 of 10000
Epoch 80 of 10000
Epoch 81 of 10000
Epoch 82 of 10000
Epoch 83 of 10000
Epoch 84 of 10000
Epoch 85 of 10000
Epoch 86 of 10000
Epoch 87 of 10000
Epoch 88 of 10000
Epoch 89 of 10000
Epoch 90 of 10000
Epoch 91 of 10000
Epoch 92 of 10000
Epoch 93 of 10000
Epoch 94 of 10000
Epoch 95 of 10000
Epoch 96 of 10000
Epoch 97 of 10000
Epoch 98 of 10000
Epoch 99 of 10000
Epoch 100 of 10000
Train Loss: 5364.3572
Val Loss: 4745.4844
tensor([[32.3103, 35.4178, 32.1914, 37.2677, 32.3005, 37.1541, 33.7040, 37.7113,
         34.2077, 38.3709, 36.6301, 38.6002, 37.7057, 39.1698, 37.0223, 39.8929,
         38.1323, 40.1508, 38.4897, 39.8030, 38.4657, 38.6603, 39.7116, 37.6687,
         40.4163, 39.1488, 40.3529, 38.3407, 40.4150, 37.9231, 40.0793, 38.0563,
         39.1231, 36.6569, 39.2495, 36.2552, 35.0170, 37.7188, 37.8169, 36.0442,
         37.5956, 33.9020, 36.9863, 35.3832, 39.2460, 36.5598, 37.5622, 35.2911,
         38.4843, 37.0150, 37.7132, 36.3840, 39.1801, 37.3171, 40.3673, 36.6815,
         37.6381, 36.7880, 33.8501, 35.4172, 35.0678, 34.8285, 36.2722, 36.0088,
         35.2138, 38.6534, 36.0339, 37.2906, 37.6790, 35.7191, 35.6017, 38.2174,
         35.3722, 36.8584, 36.2443, 36.4989, 36.0069, 37.8157, 37.7077, 35.5493,
         35.6429, 33.8257, 39.0226, 34.7835, 37.9749, 33.4309, 38.7070, 34.0262,
         31.5585, 35.1255, 33.7435, 34.6248, 34.1286, 34.0816, 36.9406, 34.7796,
         39.0054, 37.2424, 37.2809, 38.8979, 36.5597, 38.3114, 38.4126, 37.9420,
         37.8474, 37.6457, 37.9352, 37.3148, 37.4972, 39.8014, 37.0525, 38.4030,
         37.0756, 37.6949, 37.5893, 36.0599, 36.7111, 40.4552, 37.4802, 38.1598]],
       device='cuda:0')
tensor([[31.6194, 34.6759, 31.5186, 36.4657, 31.6098, 36.3284, 32.9999, 36.9122,
         33.4891, 37.5382, 35.8633, 37.7896, 36.9172, 38.3299, 36.2448, 39.0828,
         37.3353, 39.3031, 37.6730, 38.9651, 37.6424, 37.8522, 38.8497, 36.8554,
         39.5721, 38.3280, 39.4814, 37.5248, 39.5613, 37.0956, 39.2350, 37.2357,
         38.2888, 35.8651, 38.4427, 35.4806, 34.2816, 36.9147, 36.9942, 35.2635,
         36.8171, 33.2012, 36.2028, 34.6090, 38.4383, 35.7721, 36.7730, 34.5484,
         37.6763, 36.2047, 36.9069, 35.6031, 38.3610, 36.5126, 39.5093, 35.8850,
         36.8460, 36.0063, 33.1129, 34.6599, 34.3154, 34.0760, 35.5235, 35.2521,
         34.4577, 37.8523, 35.2581, 36.4927, 36.8728, 34.9558, 34.8396, 37.4098,
         34.6292, 36.0994, 35.4900, 35.7207, 35.2409, 37.0062, 36.9097, 34.7803,
         34.8991, 33.0868, 38.1796, 34.0192, 37.1806, 32.7319, 37.8714, 33.3072,
         30.8867, 34.3678, 33.0436, 33.8770, 33.3926, 33.3534, 36.1693, 34.0399,
         38.1862, 36.4526, 36.4904, 38.0623, 35.7940, 37.4948, 37.6123, 37.1112,
         37.0518, 36.8365, 37.1311, 36.5232, 36.6859, 38.9427, 36.2802, 37.5944,
         36.2948, 36.8974, 36.7856, 35.2830, 35.9357, 39.5932, 36.6932, 37.3499]],
       device='cuda:0')
tensor([[30.2531, 33.1686, 30.1521, 34.8494, 30.2593, 34.6955, 31.5956, 35.3209,
         32.0487, 35.8861, 34.3343, 36.1731, 35.3296, 36.6602, 34.7131, 37.4494,
         35.7101, 37.6128, 36.0288, 37.2774, 36.0061, 36.2217, 37.1636, 35.2355,
         37.8445, 36.6878, 37.7823, 35.9218, 37.8668, 35.4480, 37.5465, 35.5855,
         36.6146, 34.3013, 36.8328, 33.9428, 32.7877, 35.3120, 35.3710, 33.7048,
         35.2725, 31.7907, 34.6417, 33.0734, 36.8078, 34.1706, 35.1825, 33.0741,
         36.0620, 34.5906, 35.3066, 34.0441, 36.7341, 34.9362, 37.7977, 34.2879,
         35.2754, 34.4396, 31.6653, 33.1541, 32.8087, 32.5594, 33.9849, 33.7395,
         32.9429, 36.2460, 33.7074, 34.8641, 35.2743, 33.4240, 33.3312, 35.7993,
         33.1539, 34.5588, 33.9767, 34.1779, 33.7278, 35.4035, 35.2966, 33.2488,
         33.4055, 31.6045, 36.5047, 32.5030, 35.6013, 31.3271, 36.2090, 31.8638,
         29.5658, 32.8390, 31.6262, 32.3778, 31.9490, 31.9241, 34.6130, 32.5548,
         36.5234, 34.8569, 34.8923, 36.4009, 34.2768, 35.8690, 36.0024, 35.4606,
         35.4486, 35.2102, 35.5336, 34.9655, 35.0986, 37.2359, 34.7163, 35.9727,
         34.7320, 35.2910, 35.1948, 33.7447, 34.3711, 37.8824, 35.1332, 35.7429]],
       device='cuda:0')
tensor([[31.1972, 34.2140, 31.1010, 35.9679, 31.1933, 35.8259, 32.5610, 36.4278,
         33.0465, 37.0319, 35.3956, 37.2957, 36.4254, 37.8104, 35.7724, 38.5845,
         36.8365, 38.7814, 37.1669, 38.4461, 37.1362, 37.3470, 38.3360, 36.3577,
         39.0443, 37.8214, 38.9606, 37.0322, 39.0439, 36.5885, 38.7149, 36.7278,
         37.7760, 35.3809, 37.9453, 35.0040, 33.8233, 36.4171, 36.4994, 34.7790,
         36.3415, 32.7690, 35.7248, 34.1371, 37.9381, 35.2826, 36.2843, 34.0931,
         37.1774, 35.7064, 36.4138, 35.1235, 37.8625, 36.0304, 38.9769, 35.4022,
         36.3658, 35.5263, 32.6677, 34.2000, 33.8552, 33.6055, 35.0501, 34.7864,
         33.9875, 37.3627, 34.7824, 35.9870, 36.3826, 34.4846, 34.3792, 36.9148,
         34.1752, 35.6241, 35.0241, 35.2452, 34.7801, 36.5130, 36.4152, 34.3101,
         34.4343, 32.6289, 37.6652, 33.5518, 36.6998, 32.2994, 37.3651, 32.8593,
         30.4812, 33.8960, 32.6046, 33.4125, 32.9504, 32.9133, 35.6919, 33.5850,
         37.6685, 35.9639, 36.0024, 37.5489, 35.3296, 36.9961, 37.1136, 36.5945,
         36.5609, 36.3367, 36.6430, 36.0444, 36.1990, 38.4142, 35.8022, 37.0936,
         35.8140, 36.4061, 36.2940, 34.8098, 35.4563, 39.0647, 36.2169, 36.8585]],
       device='cuda:0')
tensor([[31.5576, 34.5959, 31.4565, 36.3807, 31.5466, 36.2519, 32.9315, 36.8334,
         33.4206, 37.4513, 35.7937, 37.7187, 36.8374, 38.2459, 36.1778, 39.0071,
         37.2544, 39.2178, 37.5876, 38.8857, 37.5592, 37.7680, 38.7702, 36.7739,
         39.4884, 38.2388, 39.4018, 37.4480, 39.4791, 37.0123, 39.1552, 37.1695,
         38.2025, 35.7888, 38.3627, 35.4017, 34.2089, 36.8478, 36.9162, 35.1779,
         36.7402, 33.1270, 36.1249, 34.5331, 38.3611, 35.6892, 36.6937, 34.4796,
         37.6009, 36.1257, 36.8295, 35.5234, 38.2756, 36.4358, 39.4206, 35.8081,
         36.7709, 35.9383, 33.0439, 34.5881, 34.2451, 34.0043, 35.4500, 35.1823,
         34.3827, 37.7720, 35.1839, 36.4058, 36.8019, 34.8815, 34.7701, 37.3349,
         34.5529, 36.0302, 35.4129, 35.6411, 35.1672, 36.9349, 36.8256, 34.7048,
         34.8207, 33.0078, 38.0998, 33.9429, 37.1045, 32.6575, 37.7969, 33.2326,
         30.8218, 34.2917, 32.9823, 33.8074, 33.3290, 33.2804, 36.0898, 33.9780,
         38.0986, 36.3665, 36.4105, 37.9762, 35.7187, 37.4137, 37.5340, 37.0291,
         36.9747, 36.7555, 37.0536, 36.4466, 36.6120, 38.8558, 36.2013, 37.5202,
         36.2211, 36.8273, 36.7061, 35.2101, 35.8562, 39.5142, 36.6243, 37.2757]],
       device='cuda:0')
tensor([[32.0673, 35.1491, 31.9542, 36.9791, 32.0572, 36.8534, 33.4466, 37.4241,
         33.9530, 38.0703, 36.3578, 38.3113, 37.4224, 38.8715, 36.7446, 39.6028,
         37.8502, 39.8401, 38.1947, 39.5004, 38.1678, 38.3680, 39.4031, 37.3798,
         40.1143, 38.8546, 40.0402, 38.0532, 40.1125, 37.6246, 39.7771, 37.7607,
         38.8220, 36.3675, 38.9616, 35.9781, 34.7486, 37.4341, 37.5232, 35.7638,
         37.3211, 33.6547, 36.6985, 35.1084, 38.9614, 36.2712, 37.2738, 35.0304,
         38.1981, 36.7198, 37.4208, 36.0993, 38.8842, 37.0297, 40.0593, 36.3907,
         37.3458, 36.5080, 33.5823, 35.1445, 34.7979, 34.5577, 36.0007, 35.7326,
         34.9386, 38.3612, 35.7567, 37.0044, 37.3960, 35.4394, 35.3308, 37.9268,
         35.0996, 36.5891, 35.9717, 36.2193, 35.7292, 37.5217, 37.4235, 35.2723,
         35.3744, 33.5521, 38.7182, 34.5068, 37.6911, 33.1839, 38.4066, 33.7653,
         31.3172, 34.8504, 33.5010, 34.3602, 33.8663, 33.8159, 36.6696, 34.5136,
         38.7102, 36.9599, 36.9953, 38.5991, 36.2819, 38.0228, 38.1293, 37.6390,
         37.5584, 37.3468, 37.6460, 37.0330, 37.2056, 39.4877, 36.7753, 38.1139,
         36.8014, 37.4095, 37.3031, 35.7797, 36.4368, 40.1458, 37.1993, 37.8748]],
       device='cuda:0')
tensor([[31.5775, 34.6085, 31.4668, 36.3974, 31.5715, 36.2650, 32.9467, 36.8584,
         33.4353, 37.4745, 35.8117, 37.7412, 36.8591, 38.2718, 36.1992, 39.0243,
         37.2711, 39.2399, 37.6115, 38.9005, 37.5807, 37.7877, 38.7915, 36.7920,
         39.4963, 38.2646, 39.4278, 37.4736, 39.5042, 37.0314, 39.1727, 37.1732,
         38.2269, 35.8046, 38.3874, 35.4215, 34.2167, 36.8595, 36.9406, 35.1999,
         36.7657, 33.1473, 36.1467, 34.5495, 38.3813, 35.7055, 36.7112, 34.4987,
         37.6239, 36.1416, 36.8477, 35.5496, 38.2983, 36.4616, 39.4470, 35.8254,
         36.7811, 35.9525, 33.0562, 34.6094, 34.2600, 34.0133, 35.4579, 35.1984,
         34.3996, 37.7911, 35.1991, 36.4176, 36.8210, 34.8977, 34.7842, 37.3488,
         34.5771, 36.0468, 35.4332, 35.6632, 35.1885, 36.9561, 36.8441, 34.7249,
         34.8431, 33.0247, 38.1161, 33.9565, 37.1322, 32.6823, 37.8157, 33.2473,
         30.8453, 34.3105, 32.9949, 33.8190, 33.3482, 33.3030, 36.1183, 33.9885,
         38.1208, 36.3918, 36.4320, 38.0016, 35.7407, 37.4306, 37.5549, 37.0433,
         36.9906, 36.7689, 37.0789, 36.4687, 36.6377, 38.8707, 36.2239, 37.5391,
         36.2393, 36.8386, 36.7316, 35.2341, 35.8792, 39.5296, 36.6416, 37.2980]],
       device='cuda:0')
tensor([[31.3373, 34.3538, 31.2305, 36.1260, 31.3364, 35.9762, 32.7020, 36.5752,
         33.1879, 37.1854, 35.5470, 37.4482, 36.5827, 37.9764, 35.9294, 38.7348,
         36.9856, 38.9361, 37.3178, 38.6041, 37.2932, 37.5007, 38.4949, 36.5084,
         39.1986, 37.9837, 39.1312, 37.1909, 39.2011, 36.7380, 38.8765, 36.8823,
         37.9347, 35.5352, 38.1119, 35.1561, 33.9544, 36.5825, 36.6462, 34.9253,
         36.4946, 32.9046, 35.8640, 34.2826, 38.0937, 35.4170, 36.4302, 34.2400,
         37.3391, 35.8563, 36.5658, 35.2706, 38.0132, 36.1798, 39.1444, 35.5399,
         36.5096, 35.6768, 32.7969, 34.3351, 33.9907, 33.7492, 35.1957, 34.9275,
         34.1340, 37.5169, 34.9268, 36.1358, 36.5398, 34.6289, 34.5197, 37.0716,
         34.3165, 35.7730, 35.1748, 35.3973, 34.9306, 36.6705, 36.5594, 34.4526,
         34.5827, 32.7577, 37.8180, 33.6944, 36.8505, 32.4420, 37.5214, 32.9924,
         30.6133, 34.0346, 32.7497, 33.5514, 33.1011, 33.0509, 35.8453, 33.7292,
         37.8338, 36.1113, 36.1401, 37.7108, 35.4730, 37.1499, 37.2721, 36.7563,
         36.7059, 36.4831, 36.7910, 36.1994, 36.3545, 38.5761, 35.9471, 37.2557,
         35.9665, 36.5624, 36.4558, 34.9559, 35.6047, 39.2325, 36.3674, 37.0212]],
       device='cuda:0')
tensor([[31.3975, 34.4165, 31.2937, 36.1844, 31.3915, 36.0491, 32.7608, 36.6423,
         33.2490, 37.2571, 35.6129, 37.5245, 36.6493, 38.0502, 35.9966, 38.8089,
         37.0585, 39.0121, 37.3863, 38.6766, 37.3648, 37.5699, 38.5685, 36.5773,
         39.2750, 38.0496, 39.2038, 37.2559, 39.2756, 36.8085, 38.9507, 36.9585,
         38.0016, 35.6015, 38.1787, 35.2169, 34.0253, 36.6505, 36.7215, 34.9906,
         36.5608, 32.9637, 35.9357, 34.3516, 38.1690, 35.4883, 36.5001, 34.3063,
         37.4160, 35.9267, 36.6332, 35.3390, 38.0852, 36.2480, 39.2156, 35.6101,
         36.5773, 35.7476, 32.8657, 34.4053, 34.0571, 33.8119, 35.2616, 34.9987,
         34.1986, 37.5831, 34.9928, 36.2024, 36.6112, 34.6977, 34.5863, 37.1398,
         34.3785, 35.8384, 35.2359, 35.4626, 34.9941, 36.7390, 36.6295, 34.5185,
         34.6440, 32.8197, 37.8849, 33.7541, 36.9177, 32.4996, 37.5929, 33.0544,
         30.6693, 34.1032, 32.8076, 33.6210, 33.1599, 33.1080, 35.9126, 33.7936,
         37.9080, 36.1767, 36.2129, 37.7762, 35.5375, 37.2186, 37.3440, 36.8209,
         36.7753, 36.5562, 36.8602, 36.2647, 36.4252, 38.6498, 36.0173, 37.3232,
         36.0352, 36.6282, 36.5225, 35.0220, 35.6737, 39.3050, 36.4322, 37.0953]],
       device='cuda:0')
tensor([[31.8373, 34.9046, 31.7379, 36.7074, 31.8187, 36.5849, 33.2143, 37.1640,
         33.7140, 37.7847, 36.1073, 38.0466, 37.1644, 38.5935, 36.4938, 39.3401,
         37.5826, 39.5617, 37.9194, 39.2255, 37.9007, 38.0990, 39.1187, 37.1074,
         39.8380, 38.5774, 39.7582, 37.7802, 39.8262, 37.3522, 39.4992, 37.4972,
         38.5434, 36.1074, 38.6954, 35.7178, 34.5067, 37.1680, 37.2403, 35.4953,
         37.0607, 33.4250, 36.4454, 34.8542, 38.6917, 36.0151, 37.0141, 34.7840,
         37.9315, 36.4582, 37.1567, 35.8468, 38.6138, 36.7646, 39.7663, 36.1285,
         37.0912, 36.2511, 33.3404, 34.8949, 34.5441, 34.3104, 35.7526, 35.4843,
         34.6876, 38.1069, 35.4912, 36.7392, 37.1187, 35.1957, 35.0752, 37.6647,
         34.8579, 36.3326, 35.7260, 35.9526, 35.4782, 37.2591, 37.1480, 35.0170,
         35.1265, 33.3068, 38.4367, 34.2484, 37.4275, 32.9583, 38.1281, 33.5262,
         31.0955, 34.5854, 33.2660, 34.1143, 33.6250, 33.5854, 36.4035, 34.2693,
         38.4401, 36.6949, 36.7391, 38.3137, 36.0347, 37.7517, 37.8615, 37.3734,
         37.3044, 37.0876, 37.3796, 36.7712, 36.9403, 39.2062, 36.5203, 37.8526,
         36.5355, 37.1530, 37.0295, 35.5251, 36.1738, 39.8586, 36.9431, 37.5984]],
       device='cuda:0')
tensor([[32.3054, 35.4183, 32.1929, 37.2586, 32.2914, 37.1446, 33.7005, 37.7066,
         34.2048, 38.3552, 36.6287, 38.5950, 37.6982, 39.1612, 37.0035, 39.8936,
         38.1423, 40.1478, 38.4997, 39.8068, 38.4567, 38.6583, 39.6994, 37.6644,
         40.4260, 39.1438, 40.3372, 38.3365, 40.4130, 37.9203, 40.0782, 38.0573,
         39.1198, 36.6421, 39.2476, 36.2441, 35.0173, 37.7166, 37.8089, 36.0344,
         37.5909, 33.9008, 36.9846, 35.3761, 39.2465, 36.5701, 37.5659, 35.2839,
         38.4755, 37.0088, 37.7134, 36.3834, 39.1720, 37.3085, 40.3609, 36.6844,
         37.6297, 36.7871, 33.8447, 35.4186, 35.0706, 34.8292, 36.2787, 36.0053,
         35.2112, 38.6456, 36.0339, 37.3001, 37.6709, 35.7124, 35.5982, 38.2101,
         35.3646, 36.8649, 36.2343, 36.4862, 35.9967, 37.8083, 37.7052, 35.5466,
         35.6311, 33.8285, 39.0176, 34.7767, 37.9738, 33.4220, 38.7026, 34.0251,
         31.5432, 35.1274, 33.7416, 34.6236, 34.1217, 34.0684, 36.9367, 34.7775,
         38.9999, 37.2467, 37.2860, 38.8909, 36.5513, 38.3085, 38.4103, 37.9313,
         37.8446, 37.6441, 37.9266, 37.3079, 37.4740, 39.7934, 37.0556, 38.3997,
         37.0755, 37.6955, 37.5808, 36.0532, 36.7158, 40.4462, 37.4759, 38.1437]],
       device='cuda:0')
tensor([[31.4218, 34.4475, 31.3193, 36.2187, 31.4210, 36.0814, 32.7883, 36.6763,
         33.2829, 37.2900, 35.6445, 37.5536, 36.6787, 38.0823, 36.0258, 38.8431,
         37.0971, 39.0496, 37.4246, 38.7143, 37.3995, 37.6071, 38.6096, 36.6157,
         39.3149, 38.0848, 39.2351, 37.2916, 39.3113, 36.8456, 38.9827, 36.9937,
         38.0383, 35.6361, 38.2094, 35.2493, 34.0611, 36.6888, 36.7508, 35.0216,
         36.5979, 32.9924, 35.9667, 34.3837, 38.2010, 35.5235, 36.5336, 34.3383,
         37.4502, 35.9611, 36.6709, 35.3707, 38.1177, 36.2872, 39.2592, 35.6440,
         36.6103, 35.7805, 32.8985, 34.4379, 34.0932, 33.8533, 35.2939, 35.0248,
         34.2324, 37.6178, 35.0244, 36.2451, 36.6510, 34.7267, 34.6166, 37.1685,
         34.4049, 35.8760, 35.2645, 35.4929, 35.0227, 36.7774, 36.6666, 34.5545,
         34.6768, 32.8561, 37.9324, 33.7879, 36.9464, 32.5287, 37.6311, 33.0876,
         30.6986, 34.1393, 32.8386, 33.6547, 33.1892, 33.1384, 35.9419, 33.8246,
         37.9416, 36.2161, 36.2491, 37.8129, 35.5647, 37.2573, 37.3811, 36.8701,
         36.8135, 36.5896, 36.8930, 36.2950, 36.4544, 38.6820, 36.0423, 37.3640,
         36.0742, 36.6736, 36.5580, 35.0528, 35.7066, 39.3414, 36.4680, 37.1234]],
       device='cuda:0')
tensor([[30.6639, 33.6359, 30.5695, 35.3461, 30.6702, 35.1968, 32.0234, 35.8170,
         32.4906, 36.3954, 34.7984, 36.6677, 35.8179, 37.1652, 35.1801, 37.9527,
         36.2075, 38.1374, 36.5333, 37.7955, 36.5031, 36.7226, 37.6798, 35.7326,
         38.3756, 37.1859, 38.2993, 36.4083, 38.3892, 35.9564, 38.0659, 36.0871,
         37.1318, 34.7796, 37.3211, 34.4081, 33.2511, 35.7981, 35.8668, 34.1796,
         35.7418, 32.2201, 35.1234, 33.5434, 37.3052, 34.6705, 35.6700, 33.5224,
         36.5497, 35.0864, 35.7986, 34.5215, 37.2331, 35.4136, 38.3226, 34.7904,
         35.7601, 34.9154, 32.1125, 33.6153, 33.2749, 33.0275, 34.4644, 34.2029,
         33.4060, 36.7437, 34.1846, 35.3654, 35.7615, 33.8999, 33.7898, 36.2910,
         33.6032, 35.0312, 34.4359, 34.6468, 34.1885, 35.8931, 35.7907, 33.7186,
         33.8544, 32.0685, 37.0251, 32.9742, 36.0852, 31.7541, 36.7203, 32.3058,
         29.9672, 33.3104, 32.0534, 32.8347, 32.3898, 32.3606, 35.0908, 33.0109,
         37.0251, 35.3469, 35.3878, 36.9067, 34.7449, 36.3677, 36.4936, 35.9705,
         35.9407, 35.7119, 36.0255, 35.4408, 35.5818, 37.7642, 35.2031, 36.4684,
         35.2100, 35.7828, 35.6795, 34.2188, 34.8553, 38.4044, 35.6133, 36.2249]],
       device='cuda:0')
tensor([[32.0319, 35.1161, 31.9149, 36.9432, 32.0223, 36.8267, 33.4174, 37.3923,
         33.9156, 38.0283, 36.3161, 38.2771, 37.3904, 38.8323, 36.7026, 39.5635,
         37.8074, 39.8090, 38.1584, 39.4704, 38.1373, 38.3316, 39.3649, 37.3470,
         40.0739, 38.8185, 39.9991, 38.0139, 40.0755, 37.5901, 39.7319, 37.7307,
         38.7835, 36.3358, 38.9223, 35.9378, 34.7227, 37.3971, 37.4943, 35.7278,
         37.2849, 33.6166, 36.6715, 35.0733, 38.9188, 36.2383, 37.2453, 34.9907,
         38.1568, 36.6932, 37.3921, 36.0671, 38.8438, 36.9982, 40.0232, 36.3600,
         37.3186, 36.4701, 33.5499, 35.1114, 34.7629, 34.5360, 35.9663, 35.7094,
         34.9157, 38.3320, 35.7231, 36.9719, 37.3525, 35.4070, 35.3022, 37.8859,
         35.0755, 36.5558, 35.9314, 36.1807, 35.6899, 37.4865, 37.3841, 35.2394,
         35.3308, 33.5395, 38.6861, 34.4777, 37.6524, 33.1437, 38.3640, 33.7397,
         31.2913, 34.8202, 33.4628, 34.3291, 33.8324, 33.7890, 36.6253, 34.4842,
         38.6722, 36.9250, 36.9618, 38.5682, 36.2471, 37.9875, 38.0897, 37.6133,
         37.5262, 37.3241, 37.6092, 36.9914, 37.1730, 39.4615, 36.7401, 38.0739,
         36.7635, 37.3717, 37.2614, 35.7447, 36.4000, 40.1105, 37.1642, 37.8301]],
       device='cuda:0')
tensor([[30.8446, 33.8348, 30.7551, 35.5511, 30.8524, 35.4042, 32.2052, 36.0207,
         32.6784, 36.5989, 34.9984, 36.8838, 36.0234, 37.3840, 35.3804, 38.1650,
         36.4302, 38.3477, 36.7479, 38.0150, 36.7121, 36.9357, 37.8971, 35.9367,
         38.6061, 37.3954, 38.5229, 36.6183, 38.6021, 36.1626, 38.2888, 36.3054,
         37.3456, 34.9738, 37.5346, 34.6099, 33.4388, 36.0125, 36.0751, 34.3764,
         35.9470, 32.4078, 35.3217, 33.7423, 37.5222, 34.8753, 35.8743, 33.7173,
         36.7677, 35.2969, 36.0015, 34.7230, 37.4473, 35.6179, 38.5413, 34.9844,
         35.9602, 35.1251, 32.2992, 33.8155, 33.4693, 33.2139, 34.6572, 34.4037,
         33.5971, 36.9528, 34.3813, 35.5716, 35.9690, 34.0893, 33.9881, 36.5014,
         33.7944, 35.2325, 34.6422, 34.8503, 34.3945, 36.0980, 36.0013, 33.9158,
         34.0538, 32.2465, 37.2290, 33.1631, 36.2988, 31.9380, 36.9377, 32.4879,
         30.1458, 33.5000, 32.2542, 33.0312, 32.5817, 32.5468, 35.2992, 33.2095,
         37.2438, 35.5551, 35.5902, 37.1188, 34.9426, 36.5721, 36.7083, 36.1720,
         36.1560, 35.9188, 36.2306, 35.6410, 35.7928, 37.9743, 35.4019, 36.6870,
         35.4169, 35.9976, 35.8877, 34.4165, 35.0599, 38.6340, 35.8140, 36.4405]],
       device='cuda:0')
tensor([[31.3605, 34.3769, 31.2636, 36.1476, 31.3578, 36.0147, 32.7268, 36.6029,
         33.2141, 37.2140, 35.5737, 37.4813, 36.6123, 38.0108, 35.9604, 38.7668,
         37.0217, 38.9709, 37.3513, 38.6380, 37.3233, 37.5329, 38.5231, 36.5417,
         39.2297, 38.0145, 39.1583, 37.2150, 39.2316, 36.7684, 38.9043, 36.9198,
         37.9607, 35.5664, 38.1345, 35.1863, 33.9903, 36.6143, 36.6790, 34.9544,
         36.5279, 32.9254, 35.8968, 34.3120, 38.1291, 35.4535, 36.4590, 34.2694,
         37.3777, 35.8848, 36.5975, 35.3029, 38.0492, 36.2119, 39.1773, 35.5695,
         36.5380, 35.7094, 32.8256, 34.3643, 34.0202, 33.7842, 35.2274, 34.9586,
         34.1596, 37.5426, 34.9572, 36.1691, 36.5738, 34.6599, 34.5484, 37.0978,
         34.3412, 35.8008, 35.2002, 35.4214, 34.9503, 36.7023, 36.5923, 34.4833,
         34.6160, 32.7902, 37.8504, 33.7234, 36.8800, 32.4631, 37.5514, 33.0186,
         30.6377, 34.0656, 32.7777, 33.5874, 33.1250, 33.0764, 35.8718, 33.7610,
         37.8709, 36.1412, 36.1742, 37.7375, 35.5022, 37.1808, 37.3075, 36.7918,
         36.7392, 36.5169, 36.8215, 36.2272, 36.3832, 38.6077, 35.9802, 37.2916,
         35.9975, 36.5990, 36.4778, 34.9854, 35.6382, 39.2655, 36.3901, 37.0511]],
       device='cuda:0')
tensor([[31.5151, 34.5423, 31.4074, 36.3252, 31.5095, 36.1914, 32.8784, 36.7760,
         33.3753, 37.4017, 35.7364, 37.6588, 36.7795, 38.1912, 36.1269, 38.9470,
         37.1897, 39.1577, 37.5327, 38.8187, 37.5067, 37.7134, 38.7179, 36.7207,
         39.4174, 38.1920, 39.3489, 37.3971, 39.4214, 36.9527, 39.0954, 37.0990,
         38.1505, 35.7340, 38.3144, 35.3535, 34.1538, 36.7880, 36.8611, 35.1275,
         36.6963, 33.0858, 36.0692, 34.4824, 38.3046, 35.6264, 36.6336, 34.4364,
         37.5540, 36.0651, 36.7736, 35.4745, 38.2246, 36.3932, 39.3679, 35.7460,
         36.7163, 35.8766, 32.9917, 34.5302, 34.1876, 33.9449, 35.3911, 35.1318,
         34.3295, 37.7174, 35.1261, 36.3477, 36.7510, 34.8279, 34.7131, 37.2748,
         34.5066, 35.9704, 35.3649, 35.5945, 35.1167, 36.8766, 36.7708, 34.6567,
         34.7752, 32.9559, 38.0384, 33.8948, 37.0501, 32.6226, 37.7345, 33.1824,
         30.7839, 34.2321, 32.9245, 33.7560, 33.2841, 33.2275, 36.0385, 33.9233,
         38.0515, 36.3203, 36.3539, 37.9208, 35.6651, 37.3641, 37.4828, 36.9715,
         36.9163, 36.6976, 37.0011, 36.4028, 36.5622, 38.7922, 36.1455, 37.4669,
         36.1711, 36.7683, 36.6576, 35.1552, 35.8019, 39.4537, 36.5644, 37.2274]],
       device='cuda:0')
Epoch 101 of 10000
Train Loss: 5296.4260
Val Loss: 4664.6289
Epoch 102 of 10000
Epoch 103 of 10000
Epoch 104 of 10000
Epoch 105 of 10000
Epoch 106 of 10000
Epoch 107 of 10000
Epoch 108 of 10000
Epoch 109 of 10000
Epoch 110 of 10000
Epoch 111 of 10000
Epoch 112 of 10000
Epoch 113 of 10000
Epoch 114 of 10000
Epoch 115 of 10000
Epoch 116 of 10000
Epoch 117 of 10000
Epoch 118 of 10000
Epoch 119 of 10000
Epoch 120 of 10000
Epoch 121 of 10000
Epoch 122 of 10000
Epoch 123 of 10000
Epoch 124 of 10000
Epoch 125 of 10000
Epoch 126 of 10000
Epoch 127 of 10000
Epoch 128 of 10000
Epoch 129 of 10000
Epoch 130 of 10000
Epoch 131 of 10000
Epoch 132 of 10000
Epoch 133 of 10000
Traceback (most recent call last):
  File "train.py", line 697, in <module>
    main()
  File "train.py", line 533, in main
    train_epoch_loss = fit(
  File "train.py", line 313, in fit
    image, keypoints = data["image"].to(config.DEVICE), data["keypoints"].to(
KeyboardInterrupt
202306290845_resnet18
Training sample instances: 856
Validation sample instances: 17
{'image': tensor([[[0.6549, 0.6667, 0.6667,  ..., 0.8000, 0.5137, 0.8784],
         [0.9765, 0.9843, 0.9843,  ..., 0.8000, 0.5922, 0.5569],
         [0.7216, 0.7255, 0.7216,  ..., 0.5765, 0.8745, 0.4118],
         ...,
         [0.7961, 0.7961, 0.7961,  ..., 0.9922, 0.9608, 0.6275],
         [0.7922, 0.7922, 0.7882,  ..., 0.9922, 0.9882, 0.8235],
         [0.9765, 0.9804, 0.9843,  ..., 0.9922, 0.9725, 0.8902]],

        [[0.6549, 0.6667, 0.6667,  ..., 0.8000, 0.5137, 0.8784],
         [0.9765, 0.9843, 0.9843,  ..., 0.8000, 0.5922, 0.5569],
         [0.7216, 0.7255, 0.7216,  ..., 0.5765, 0.8745, 0.4118],
         ...,
         [0.7961, 0.7961, 0.7961,  ..., 0.9922, 0.9608, 0.6275],
         [0.7922, 0.7922, 0.7882,  ..., 0.9922, 0.9882, 0.8235],
         [0.9765, 0.9804, 0.9843,  ..., 0.9922, 0.9725, 0.8902]],

        [[0.6549, 0.6667, 0.6667,  ..., 0.8000, 0.5137, 0.8784],
         [0.9765, 0.9843, 0.9843,  ..., 0.8000, 0.5922, 0.5569],
         [0.7216, 0.7255, 0.7216,  ..., 0.5765, 0.8745, 0.4118],
         ...,
         [0.7961, 0.7961, 0.7961,  ..., 0.9922, 0.9608, 0.6275],
         [0.7922, 0.7922, 0.7882,  ..., 0.9922, 0.9882, 0.8235],
         [0.9765, 0.9804, 0.9843,  ..., 0.9922, 0.9725, 0.8902]]]), 'keypoints': tensor([[  6.5552,  65.7091],
        [  7.9834,  85.7337],
        [ 10.3638, 105.7583],
        [ 12.7443, 125.3476],
        [ 24.4083, 138.8424],
        [ 38.6908, 149.5077],
        [ 53.2113, 159.9553],
        [ 67.7318, 170.4029],
        [ 83.6806, 178.2387],
        [100.5816, 174.7561],
        [113.4358, 164.9615],
        [127.7183, 154.0785],
        [140.8106, 143.1956],
        [150.3322, 129.0478],
        [158.1876, 112.7234],
        [166.2810,  96.6166],
        [171.9940,  80.9452],
        [142.4769,  83.1218],
        [ 62.7330,  75.0684],
        [132.2411,  73.9801],
        [138.6682,  61.3559],
        [151.7605,  55.9145],
        [164.3767,  62.2266],
        [168.6614,  74.4155],
        [166.0430,  85.2984],
        [157.9495,  97.2696],
        [145.5714, 104.2347],
        [131.2889, 101.8405],
        [129.8607,  88.5633],
        [ 31.5495,  61.5736],
        [ 46.5461,  48.7317],
        [ 68.2079,  43.2903],
        [ 88.9175,  48.0788],
        [ 98.6772,  64.4032],
        [ 93.6784,  83.1218],
        [ 81.3002,  98.1403],
        [ 60.5906, 100.3168],
        [ 41.3092,  94.0047],
        [ 30.3593,  77.8980],
        [148.4279,  32.6250],
        [158.6637,  33.0603],
        [167.2332,  35.8899],
        [175.0885,  40.4607],
        [180.8015,  45.6845],
        [ 29.4072,  28.7071],
        [ 47.9744,  24.1363],
        [ 68.2079,  22.1774],
        [ 88.9175,  22.3950],
        [106.5326,  26.3129],
        [128.4324, 117.0766],
        [101.2957, 137.0191],
        [105.1043, 135.2779],
        [111.0554, 134.6249],
        [116.2923, 135.9308],
        [119.1488, 137.8898],
        [119.1488, 138.1895],
        [116.2923, 136.2305],
        [111.0554, 134.9246],
        [105.1043, 135.5775],
        [101.2957, 137.3188]])}
train_tensor_dataの数 856
valid_tensor_dataの数 17
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (fc): Linear(in_features=512, out_features=120, bias=True)
)
Epoch 1 of 10000
Train Loss: 10687.9451
Val Loss: 10389.6006
Epoch 2 of 10000
Epoch 3 of 10000
Epoch 4 of 10000
Epoch 5 of 10000
Epoch 6 of 10000
Epoch 7 of 10000
Epoch 8 of 10000
Epoch 9 of 10000
